{"version":3,"sources":["helpers/UsersGraphQL.js","components/nav/UserProfile.js","components/hooks/useProfile.js","components/nav/NavBar.js","helpers/ReportsGraphQL.js","helpers/Numbers.js","components/graph/BarGraph.js","pages/dashboard/ComplaintsByNatureGraph.js","helpers/ColorsHelper.js","components/graph/PieChart.js","pages/dashboard/ComplaintsByStatusGraph.js","pages/dashboard/ComplaintsByLocationGraph.js","pages/HomePage.js","components/tables/Table.js","components/icons/MatIcon.js","helpers/GraphQL.js","components/forms/Input.js","components/forms/Select.js","helpers/FileUpload.js","pages/complaints/NewComplaintRegisterPage.js","components/modals/Modal.js","pages/complaints/AssignComplaintPopup.js","pages/complaints/UpdateComplaintForm.js","components/tables/Pagination.js","pages/complaints/FeedbackForm.js","conf.js","pages/complaints/Attachment.js","pages/complaints/ComplaintAttachements.js","pages/complaints/ComplaintDetailViewPage.js","pages/ComplaintsPage.js","pages/users/NewUserPage.js","pages/users/UpdateUserPage.js","pages/UserManagementPage.js","helpers/AuthHelper.js","pages/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["USERS_GET_TOKEN","gql","USERS_GET_ME","USERS","REGISTER_USER","GET_USER","UserProfile","props","useQuery","loading","error","data","console","log","className","me","username","exact","to","useProfile","history","useHistory","graphQLErrors","length","message","push","NavBar","user","isSuperuser","NATURE_SUMMARY","STATUS_SUMMARY","LOCATION_SUMMARY","numOr0","n","isNaN","parseFloat","Numbers","fmt","num","Number","toFixed","toString","replace","sum","nums","reduce","a","b","dpts","Math","round","BarGraph","graphId","meta","title","extra","type","useEffect","datasets","labels","options","plugins","datalabels","display","hover","mode","intersect","tooltips","callbacks","label","tooltipItem","ds","datasetIndex","val","index","lab","scales","yAxes","ticks","beginAtZero","callback","value","toLocaleString","Chart","document","getElementById","id","style","ComplaintsByNatureGraph","backgroundColor","borderWidth","natureSummary","map","r","countAll","countDone","name","ColorsHelper","randomColor","color","i","floor","random","randomColors","Array","keys","contrastColors","colors","c","invert","PieChart","onDataClick","bgColors","legend","position","formatter","ctx","chart","onClick","_","els","slice","_index","d","myPieChart","ComplaintsByStatusGraph","statusSummary","count","ComplaintsByLocationGraph","locationSummary","locName","locCount","HomePage","Table","columns","idCol","col","key","row","render","MatIcon","text","COMPLAINTS","GET_COMPLAINT","NATURES","COMPLAINT_ATTACHMENTS","LOCATIONS","REGISTER_COMPLAINT","UPDATE_ASSIGN_COMPLAINT","UPDATE_DETAILS_COMPLAINT","SEND_FEEDBACK","Input","help","cls","htmlFor","Select","o","attachmentsChangeHandler","e","cb","files","theFiles","target","reader","FileReader","file","addEventListener","result","filename","updateAttachements","readAsDataURL","NewComplaintRegisterPage","natures","locations","useState","redirect","setRedirect","Map","formData","setFormData","useMutation","registerComplaint","natureOptions","locationOptions","attachments","setAttachments","handleChange","onSubmit","preventDefault","variables","openDate","refetchQueries","query","then","res","onChange","required","max","Date","toISOString","split","maxLength","multiple","Modal","onClose","children","posx","posy","AssignComplaintPopup","complaint","onComplete","users","assignTo","userOptions","withRouter","match","params","updateDetails","inputsConf","prev","Object","forEach","details","defaultValue","actionPlan","rca","results","rows","financialImpact","costCenter","responsiblePerson","Pagination","pageNo","onPageChanged","lastPage","disabled","FeedbackForm","img","sendFeedback","email","setEmail","remarks","setRemarks","encType","CONF","DEV","baseUrl","ROOT","PROD","BASE_URL","ROOT_URL","Attachment","doc","href","download","ComplaintAttachements","complaint_id","complaintAttachments","dayjs","require","html2canvas","detailsView","useRef","feedback","setFeedback","setImg","open","close","clientName","location","nature","closeDate","status","assignedTo","assignedAt","closedBy","fmtDate","strDate","indexOf","format","ref","diff","btn","current","scrollY","window","canvas","dt","toDataURL","ComplaintsPage","setPageNo","firstRender","complaintsQuery","pageSize","refetch","assign","setAssign","selected","setSelected","parsed","parse","toLocaleDateString","records","complaints","nature_name","location_name","path","newPageNo","NewUserPage","registerUser","readOnly","firstName","lastName","UserManagementPage","AuthHelper","saveToken","token","sessionStorage","setItem","getToken","getItem","removeToken","removeItem","LoginPage","login","client","src","alt","clearStore","tokenAuth","ApolloClient","uri","request","operation","setContext","headers","Authorization","App","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.61e40283.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\r\nexport const USERS_GET_TOKEN = gql`\r\n  mutation getToken($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERS_GET_ME = gql`\r\n  query getMe {\r\n    me {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERS = gql`\r\n  query getUsers {\r\n    users {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_USER = gql`\r\n  mutation registerUser(\r\n    $id: ID\r\n    $username: String!\r\n    $email: String!\r\n    $firstName: String\r\n    $lastName: String\r\n  ) {\r\n    registerUser(\r\n      id: $id\r\n      username: $username\r\n      email: $email\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n    ) {\r\n      user {\r\n        id\r\n        username\r\n        dateJoined\r\n        firstName\r\n        lastName\r\n        lastLogin\r\n        email\r\n        isStaff\r\n        isSuperuser\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER = gql`\r\n  query getUser($id: ID!) {\r\n    user(id: $id) {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction UserProfile(props) {\r\n  let { loading, error, data } = useQuery(USERS_GET_ME);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  console.log(data);\r\n  return (\r\n    <div className=\"user-profile-nav\">\r\n      <ul>\r\n        <li>\r\n          <b>{data.me.username}</b>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/login\">\r\n            Logout\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction useProfile() {\r\n  const history = useHistory();\r\n  const { loading, error, data } = useQuery(USERS_GET_ME);\r\n  if (loading) return null;\r\n  if (error) {\r\n    if (error.graphQLErrors.length) {\r\n      let message = error.graphQLErrors[0].message;\r\n      if (\r\n        message === \"Signature has expired\" ||\r\n        message === \"You do not have permission to perform this action\"\r\n      ) {\r\n        history.push(\"/login\");\r\n      }\r\n    }\r\n    console.log(error);\r\n    return null;\r\n  }\r\n  console.log(data);\r\n  return data;\r\n}\r\n\r\nexport default useProfile;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport useProfile from \"../hooks/useProfile\";\r\n\r\nfunction NavBar() {\r\n  const user = useProfile();\r\n  console.log(user);\r\n  return (\r\n    <header className=\"navbar container\">\r\n      <div className=\"content\">\r\n        <h3>Twiga - CCMS</h3>\r\n        <div className=\"nav-links\">\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to=\"/\">\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/complaints\">Complaints</NavLink>\r\n            </li>\r\n            {user && user.me && user.me.isSuperuser && (\r\n              <li>\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n              </li>\r\n            )}\r\n          </ul>\r\n          <UserProfile />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const NATURE_SUMMARY = gql`\r\n  query natureSummary {\r\n    natureSummary {\r\n      name\r\n      countAll\r\n      countDone\r\n    }\r\n  }\r\n`;\r\n\r\nexport const STATUS_SUMMARY = gql`\r\n  query statusSummary {\r\n    statusSummary {\r\n      name\r\n      count\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOCATION_SUMMARY = gql`\r\n  query getLocSummary {\r\n    locationSummary {\r\n      locName\r\n      locCount\r\n    }\r\n  }\r\n`;\r\n","let numOr0 = (n) => (isNaN(n) ? 0 : parseFloat(n));\r\nconst Numbers = {\r\n  fmt: (num) =>\r\n    Number(num)\r\n      .toFixed(2)\r\n      .toString()\r\n      .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\"),\r\n  sum: (nums) => nums.reduce((a, b) => numOr0(a) + numOr0(b), 0),\r\n  dpts: (num) => (Math.round(num * 100) / 100).toFixed(2),\r\n};\r\nexport default Numbers;\r\n","import React from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport Numbers from \"../../helpers/Numbers\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst BarGraph = ({ graphId, meta, title, extra = null, type = \"bar\" }) => {\r\n  useEffect(() => {\r\n    const data = {\r\n      datasets: meta.data,\r\n      labels: meta.labels,\r\n    };\r\n    console.log(data);\r\n    const options = {\r\n      plugins: {\r\n        datalabels: {\r\n          display: true,\r\n        },\r\n      },\r\n      hover: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n      },\r\n      tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n          label: function (tooltipItem, data) {\r\n            let ds = data.datasets[tooltipItem.datasetIndex];\r\n            let val = ds.data[tooltipItem.index];\r\n            let lab = ds.label;\r\n            return `${Numbers.fmt(val)} : ${lab}`;\r\n          },\r\n        },\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: meta.beginAtZero || false,\r\n              callback: function (value) {\r\n                return value.toLocaleString();\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    new Chart(document.getElementById(graphId), {\r\n      type: type,\r\n      data: data,\r\n      options: options,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`graph-container bg-white card ${extra ? extra : \"\"}`}>\r\n      <h6 className=\"pl-1\">{title}</h6>\r\n      <div>\r\n        <canvas id={graphId} className=\"graph p-1\" style={{}}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n","import React from \"react\";\r\nimport { NATURE_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport BarGraph from \"../../components/graph/BarGraph\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\n\r\nfunction ComplaintsByNatureGraph(props) {\r\n  const { loading, data } = useQuery(NATURE_SUMMARY);\r\n  if (loading) return null;\r\n  console.log(data);\r\n  let allProps = {\r\n    backgroundColor: \"rgba(255, 212, 0, .5)\",\r\n    borderWidth: 1,\r\n  };\r\n  let completeProps = {\r\n    backgroundColor: \"#3FF\",\r\n    borderWidth: 1,\r\n  };\r\n  const meta = {\r\n    data: [\r\n      {\r\n        ...allProps,\r\n        data: data.natureSummary.map((r) => r.countAll),\r\n        label: \"Total\",\r\n      },\r\n      {\r\n        ...completeProps,\r\n        data: data.natureSummary.map((r) => r.countDone),\r\n        label: \"Completed\",\r\n      },\r\n    ],\r\n    labels: data.natureSummary.map((r) => r.name),\r\n    beginAtZero: true,\r\n  };\r\n  return (\r\n    <BarGraph\r\n      meta={meta}\r\n      graphId=\"test-graph\"\r\n      title=\"Complaints By Nature\"\r\n      //   extra=\"grid-all-cols\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComplaintsByNatureGraph;\r\n","import invert from \"invert-color\";\r\nexport const ColorsHelper = {\r\n  randomColor() {\r\n    var letters = \"0123456789ABCDEF\";\r\n    var color = \"#\";\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  },\r\n  randomColors(num) {\r\n    return [...Array(num).keys()].map(() => this.randomColor());\r\n  },\r\n  contrastColors(colors) {\r\n    return colors.map(c => invert(c));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\nimport Chart from \"chart.js\";\r\nimport { useEffect } from \"react\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\n\r\nconst PieChart = ({ meta, graphId, title, colors, onDataClick }) => {\r\n  useEffect(() => {\r\n    let bgColors = colors || ColorsHelper.randomColors(meta.data.length);\r\n    let fntColors = ColorsHelper.contrastColors(bgColors);\r\n    let options = {\r\n      legend: {\r\n        position: \"right\",\r\n      },\r\n      plugins: {\r\n        datalabels: {\r\n          formatter: (value, ctx) => {\r\n            let sum = 0;\r\n            let dataArr = ctx.chart.data.datasets[0].data;\r\n            dataArr.map((data) => {\r\n              sum += data;\r\n            });\r\n            let percentage = ((value * 100) / sum).toFixed(0) + \"%\";\r\n            return percentage;\r\n          },\r\n          color: fntColors,\r\n        },\r\n      },\r\n      onClick: (_, els) => {\r\n        if (els && els.length && onDataClick) {\r\n          let data = meta.data.slice(els[0]._index, els[0]._index + 1)[0];\r\n          onDataClick(data);\r\n        }\r\n      },\r\n    };\r\n    let data = {\r\n      datasets: [\r\n        {\r\n          data: meta.data.map((d) => d.value),\r\n          backgroundColor: bgColors,\r\n        },\r\n      ],\r\n      labels: meta.data.map((d) => d.name),\r\n    };\r\n\r\n    var myPieChart = new Chart(document.getElementById(graphId), {\r\n      type: \"pie\",\r\n      data: data,\r\n      options: options,\r\n    });\r\n    console.log(myPieChart);\r\n  }, []);\r\n  return (\r\n    <div className=\"graph-container bg-white card p-2\">\r\n      <h6 className=\"pl-1\">{title}</h6>\r\n      <div>\r\n        <canvas id={graphId} className=\"graph p-1\" style={{}}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React from \"react\";\r\nimport { STATUS_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport PieChart from \"../../components/graph/PieChart\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\n\r\nfunction ComplaintsByStatusGraph() {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(STATUS_SUMMARY);\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  console.log(data);\r\n  const meta = {\r\n    data: data.statusSummary.map((r) => {\r\n      return {\r\n        name: r.name,\r\n        value: r.count,\r\n      };\r\n    }),\r\n  };\r\n  return (\r\n    <PieChart\r\n      meta={meta}\r\n      title=\"Complaints Status Summary\"\r\n      graphId=\"complaints-status-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComplaintsByStatusGraph;\r\n","import React from \"react\";\r\nimport { LOCATION_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport PieChart from \"../../components/graph/PieChart\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\n\r\nfunction ComplaintsByLocationGraph() {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(LOCATION_SUMMARY);\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  const meta = {\r\n    data: data.locationSummary.map((r) => {\r\n      return {\r\n        name: r.locName,\r\n        value: r.locCount,\r\n      };\r\n    }),\r\n  };\r\n  return (\r\n    <PieChart\r\n      meta={meta}\r\n      title=\"Complaints Location Summary\"\r\n      graphId=\"complaints-location-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComplaintsByLocationGraph;\r\n","import React from \"react\";\r\nimport ComplaintsByNatureGraph from \"./dashboard/ComplaintsByNatureGraph\";\r\nimport ComplaintsByStatusGraph from \"./dashboard/ComplaintsByStatusGraph\";\r\nimport ComplaintsByLocationGraph from \"./dashboard/ComplaintsByLocationGraph\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <ComplaintsByStatusGraph />\r\n      <ComplaintsByLocationGraph />\r\n      <ComplaintsByNatureGraph />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nfunction Table({ columns, data, idCol = \"id\" }) {\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col) => (\r\n              <th key={col.name}>{col.label}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row) => (\r\n            <tr key={row[idCol]}>\r\n              {columns.map((col) => (\r\n                <td key={col.name} className={col.className}>\r\n                  {col.render ? col.render(row) : row[col.name]}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nconst MatIcon = ({ name, extra, text }) => (\r\n  <>\r\n    <span className={`mat-icon material-icons${extra ? \" \" + extra : \"\"}`}>\r\n      {name}\r\n    </span>\r\n    {text && <span>{text}</span>}\r\n  </>\r\n);\r\nexport default MatIcon;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const COMPLAINTS = gql`\r\n  query fetchComplaints($pageNo: Int, $pageSize: Int) {\r\n    complaints(pageNo: $pageNo, pageSize: $pageSize) {\r\n      id\r\n      clientName\r\n      location {\r\n        id\r\n        name\r\n      }\r\n      openDate\r\n      status\r\n      details\r\n      rca\r\n      actionPlan\r\n      results\r\n      financialImpact\r\n      costCenter\r\n      responsiblePerson\r\n      dueDate\r\n      closeDate\r\n      assignedTo {\r\n        id\r\n        username\r\n      }\r\n      nature {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_COMPLAINT = gql`\r\n  query getComplaint($id: ID!) {\r\n    complaint(id: $id) {\r\n      id\r\n      clientName\r\n      openDate\r\n      status\r\n      details\r\n      rca\r\n      actionPlan\r\n      results\r\n      financialImpact\r\n      costCenter\r\n      responsiblePerson\r\n      dueDate\r\n      nature {\r\n        id\r\n        name\r\n      }\r\n      location {\r\n        id\r\n        name\r\n      }\r\n      assignedTo {\r\n        id\r\n        username\r\n      }\r\n      assignedAt\r\n      closedBy {\r\n        id\r\n        username\r\n      }\r\n      closeDate\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NATURES = gql`\r\n  query getNatures {\r\n    natures {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\nexport const COMPLAINT_ATTACHMENTS = gql`\r\n  query getComplAttachments($complaint_id: ID!) {\r\n    complaintAttachments(complaintId: $complaint_id) {\r\n      id\r\n      file\r\n    }\r\n  }\r\n`;\r\nexport const LOCATIONS = gql`\r\n  query getLocations {\r\n    locations {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_COMPLAINT = gql`\r\n  mutation createComplaint(\r\n    $details: String!\r\n    $clientName: String!\r\n    $openDate: DateTime!\r\n    $nature: ID!\r\n    $location: ID!\r\n    $attachments: [FileType]\r\n  ) {\r\n    registerComplaint(\r\n      details: $details\r\n      clientName: $clientName\r\n      nature: $nature\r\n      location: $location\r\n      openDate: $openDate\r\n      attachments: $attachments\r\n    ) {\r\n      complaint {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_ASSIGN_COMPLAINT = gql`\r\n  mutation assignTo($id: ID!, $userId: ID!) {\r\n    assignComplaint(id: $id, userId: $userId) {\r\n      complaint {\r\n        id\r\n        details\r\n        assignedTo {\r\n          id\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_DETAILS_COMPLAINT = gql`\r\n  mutation updateDetails(\r\n    $id: ID!\r\n    $rca: String!\r\n    $actionPlan: String!\r\n    $results: String!\r\n    $financialImpact: String!\r\n    $costCenter: String!\r\n    $responsiblePerson: String!\r\n    $attachments: [FileType]\r\n  ) {\r\n    updateComplaint(\r\n      id: $id\r\n      rca: $rca\r\n      actionPlan: $actionPlan\r\n      results: $results\r\n      financialImpact: $financialImpact\r\n      costCenter: $costCenter\r\n      responsiblePerson: $responsiblePerson\r\n      attachments: $attachments\r\n    ) {\r\n      complaint {\r\n        id\r\n        details\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SEND_FEEDBACK = gql`\r\n  mutation sendFeedback(\r\n    $attachments: [FileType]\r\n    $id: ID!\r\n    $email: String!\r\n    $remarks: String\r\n  ) {\r\n    feedback(\r\n      attachments: $attachments\r\n      id: $id\r\n      email: $email\r\n      remarks: $remarks\r\n    ) {\r\n      complaint {\r\n        id\r\n        clientName\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nfunction Input({ label, name, help, type = \"text\", cls, ...props }) {\r\n  return (\r\n    <div className={`input-wrap ${cls || \"\"}`}>\r\n      <label htmlFor={name}>{label}</label>\r\n      {type === \"textarea\" ? (\r\n        <textarea name={name} id={name} {...props} />\r\n      ) : (\r\n        <input type={type} name={name} id={name} {...props} />\r\n      )}\r\n      {help && <span className=\"input-help\">{help}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nfunction Select({ label, name, options = [], ...props }) {\r\n  return (\r\n    <div className=\"input-wrap\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...props}>\r\n        <option value=\"\">---Select---</option>\r\n        {options.map((o) => (\r\n          <option key={o.id} value={o.id}>\r\n            {o.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n","export const attachmentsChangeHandler = (e, cb) => {\r\n  let files = [];\r\n\r\n  let updateAttachements = (files) => {\r\n    cb(files);\r\n  };\r\n\r\n  let theFiles = e.target.files;\r\n  for (let i = 0; i < theFiles.length; i++) {\r\n    const reader = new FileReader();\r\n    let file = theFiles[i];\r\n    reader.addEventListener(\"load\", () => {\r\n      let data = reader.result;\r\n      files.push({ filename: file.name, data: data });\r\n      if (files.length === theFiles.length) {\r\n        updateAttachements(files);\r\n      }\r\n    });\r\n    reader.readAsDataURL(file);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../../components/forms/Input\";\r\nimport Select from \"../../components/forms/Select\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  REGISTER_COMPLAINT,\r\n  COMPLAINTS,\r\n  NATURES,\r\n  LOCATIONS,\r\n} from \"../../helpers/GraphQL\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { attachmentsChangeHandler } from \"../../helpers/FileUpload\";\r\n\r\nfunction NewComplaintRegisterPage({}) {\r\n  let natures = useQuery(NATURES);\r\n  let locations = useQuery(LOCATIONS);\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerComplaint, { loading }] = useMutation(REGISTER_COMPLAINT);\r\n  const natureOptions = natures.data ? natures.data.natures : [];\r\n  const locationOptions = locations.data ? locations.data.locations : [];\r\n  const [attachments, setAttachments] = useState([]);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    registerComplaint({\r\n      variables: {\r\n        ...formData,\r\n        attachments: attachments,\r\n        openDate: `${formData.openDate}T00:00+00:00`,\r\n      },\r\n      refetchQueries: [{ query: COMPLAINTS }],\r\n    }).then(\r\n      () => setRedirect(\"/complaints\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/complaints\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Register New Complaint</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-grid-2\">\r\n          <div>\r\n            <Input\r\n              name=\"clientName\"\r\n              label=\"Client Name\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <Select\r\n              name=\"location\"\r\n              label=\"Location\"\r\n              options={locationOptions}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <Select\r\n              name=\"nature\"\r\n              label=\"Nature\"\r\n              options={natureOptions}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n\r\n            <Input\r\n              name=\"openDate\"\r\n              label=\"Open Date\"\r\n              type=\"date\"\r\n              onChange={handleChange}\r\n              required\r\n              max={new Date().toISOString().split(\"T\")[0]}\r\n            />\r\n          </div>\r\n          <div className=\"register-right\">\r\n            <Input\r\n              name=\"details\"\r\n              label=\"Details\"\r\n              type=\"textarea\"\r\n              onChange={handleChange}\r\n              required\r\n              maxLength=\"300\"\r\n              help=\"Max 300 characters\"\r\n              cls=\"large\"\r\n            />\r\n            <Input\r\n              name=\"attachments\"\r\n              type=\"file\"\r\n              label=\"Attachments\"\r\n              multiple\r\n              onChange={(e) =>\r\n                attachmentsChangeHandler(e, (files) => setAttachments(files))\r\n              }\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewComplaintRegisterPage;\r\n","import React from \"react\";\r\nimport MatIcon from \"../icons/MatIcon\";\r\n\r\nfunction Modal({ onClose, title, children, posx, posy, ...props }) {\r\n  const showHideClassName = \"modal display-block\";\r\n  return (\r\n    <div className={showHideClassName} {...props}>\r\n      <div className=\"modal-main\">\r\n        <div className=\"modal-header\">\r\n          {title ? <h5 className=\"modal-title\">{title}</h5> : <span></span>}\r\n          <div className=\"btn-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn text-warning m-1\"\r\n              onClick={onClose}\r\n            >\r\n              <MatIcon name=\"close\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-content\">{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport Select from \"../../components/forms/Select\";\r\nimport { UPDATE_ASSIGN_COMPLAINT, COMPLAINTS } from \"../../helpers/GraphQL\";\r\nimport { USERS } from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\n\r\nfunction AssignComplaintPopup({ complaint, onComplete }) {\r\n  let users = useQuery(USERS);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [assignTo, { loading }] = useMutation(UPDATE_ASSIGN_COMPLAINT);\r\n  const userOptions = users.data\r\n    ? users.data.users.map((r) => {\r\n        return { ...r, name: r.username };\r\n      })\r\n    : [];\r\n  console.log(complaint);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    assignTo({\r\n      variables: {\r\n        ...formData,\r\n        id: complaint.id,\r\n      },\r\n      refetchQueries: [{ query: COMPLAINTS }],\r\n    }).then(\r\n      () => onComplete(),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return (\r\n    <div>\r\n      <h5>Assign Complaint To User</h5>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Select\r\n            name=\"userId\"\r\n            label=\"Assign To\"\r\n            onChange={handleChange}\r\n            required\r\n            options={userOptions}\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignComplaintPopup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  COMPLAINTS,\r\n  UPDATE_DETAILS_COMPLAINT,\r\n  GET_COMPLAINT,\r\n} from \"../../helpers/GraphQL\";\r\nimport Input from \"../../components/forms/Input\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { Redirect, NavLink } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { withRouter } from \"react-router\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { attachmentsChangeHandler } from \"../../helpers/FileUpload\";\r\n\r\nfunction UpdateComplaintForm({ match }) {\r\n  useProfile();\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [attachments, setAttachments] = useState([]);\r\n\r\n  const { loading, error, data } = useQuery(GET_COMPLAINT, {\r\n    variables: { id: match.params.id },\r\n  });\r\n  const [updateDetails] = useMutation(UPDATE_DETAILS_COMPLAINT);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  let complaint = data.complaint;\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    let prev = new Map();\r\n    Object.keys(complaint).forEach((key) => {\r\n      if (!formData[key]) {\r\n        prev[key] = complaint[key];\r\n      }\r\n    });\r\n\r\n    updateDetails({\r\n      variables: {\r\n        ...formData,\r\n        ...prev,\r\n        attachments: attachments,\r\n        id: complaint.id,\r\n      },\r\n      refetchQueries: [{ query: COMPLAINTS }],\r\n    }).then(\r\n      () => setRedirect(\"/complaints\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  const inputsConf = {\r\n    type: \"textarea\",\r\n    onChange: handleChange,\r\n    required: \"required\",\r\n    maxLength: \"200\",\r\n    help: \"Max 200 characters\",\r\n  };\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div className=\"form-wrap\">\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/complaints\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Fill complain analysis/resolution</h5>\r\n        </div>\r\n      </div>\r\n\r\n      <form className=\"form form-flex v-scroll\" onSubmit={handleSubmit}>\r\n        <div className=\"form-fields\">\r\n          <p>\r\n            <b>Details:</b> {complaint.details}\r\n          </p>\r\n          <Input\r\n            name=\"actionPlan\"\r\n            label=\"Action Plan\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.actionPlan}\r\n          />\r\n          <Input\r\n            name=\"rca\"\r\n            label=\"Root Cause Analysis\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.rca}\r\n          />\r\n          <Input\r\n            name=\"results\"\r\n            label=\"Results\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.results}\r\n            maxLength=\"500\"\r\n            help=\"Max 500 characters\"\r\n            rows=\"4\"\r\n          />\r\n          <Input\r\n            name=\"financialImpact\"\r\n            label=\"Financial Impact\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.financialImpact}\r\n          />\r\n          <Input\r\n            name=\"costCenter\"\r\n            label=\"Cost Center\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.costCenter}\r\n          />\r\n          <Input\r\n            name=\"responsiblePerson\"\r\n            label=\"Responsible Person\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.responsiblePerson}\r\n          />\r\n          <Input\r\n            name=\"attachments\"\r\n            type=\"file\"\r\n            label=\"Attachments\"\r\n            multiple\r\n            onChange={(e) =>\r\n              attachmentsChangeHandler(e, (files) => setAttachments(files))\r\n            }\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(UpdateComplaintForm);\r\n","import React from \"react\";\r\nimport MatIcon from \"../icons/MatIcon\";\r\n\r\nfunction Pagination({ pageNo, onPageChanged, lastPage }) {\r\n  const handlePrev = () => {\r\n    let newPage = pageNo > 1 ? pageNo - 1 : 1;\r\n    if (onPageChanged) {\r\n      onPageChanged(newPage);\r\n    }\r\n  };\r\n  const handleNext = () => {\r\n    let newPage = pageNo + 1;\r\n    if (onPageChanged) {\r\n      onPageChanged(newPage);\r\n    }\r\n  };\r\n  return (\r\n    <ul className=\"pagination\">\r\n      <li className=\"btn-wrap\">\r\n        <button onClick={handlePrev} disabled={pageNo <= 1}>\r\n          <MatIcon name=\"keyboard_arrow_left\" /> Previous\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <span>Page {pageNo}</span>\r\n      </li>\r\n      <li className=\"btn-wrap\">\r\n        <button onClick={handleNext} disabled={lastPage}>\r\n          Next <MatIcon name=\"keyboard_arrow_right\" />\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { SEND_FEEDBACK, COMPLAINTS } from \"../../helpers/GraphQL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Input from \"../../components/forms/Input\";\r\nimport { attachmentsChangeHandler } from \"../../helpers/FileUpload\";\r\n\r\nfunction FeedbackForm({ complaint, img }) {\r\n  const [sendFeedback, {}] = useMutation(SEND_FEEDBACK);\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  const [remarks, setRemarks] = useState(null);\r\n  const [attachments, setAttachments] = useState([]);\r\n\r\n  function sendNow(e) {\r\n    e.preventDefault();\r\n    let params = {\r\n      id: complaint.id,\r\n      attachments: attachments,\r\n      email: email,\r\n      remarks: remarks,\r\n    };\r\n    console.log(params);\r\n    sendFeedback({\r\n      variables: params,\r\n      refetchQueries: [{ query: COMPLAINTS }],\r\n    }).then(\r\n      () => setRedirect(\"/complaints\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <form className=\"form\" onSubmit={sendNow} encType=\"multipart/form-data\">\r\n        <div>\r\n          <Input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            label=\"Customer Email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"remarks\"\r\n            type=\"textarea\"\r\n            label=\"Remarks\"\r\n            onChange={(e) => setRemarks(e.target.value)}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"attachments\"\r\n            type=\"file\"\r\n            label=\"Attachments\"\r\n            multiple\r\n            onChange={(e) =>\r\n              attachmentsChangeHandler(e, (files) => setAttachments(files))\r\n            }\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button className=\"p-1\">Send Feedback</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeedbackForm;\r\n","// Configurations:\r\n// 1. Backend endpoint depending on test vs live\r\n// 2.\r\n\r\nconst ENVIRON = process.env.NODE_ENV === \"development\" ? \"DEV\" : \"PROD\";\r\n\r\nconst CONF = {\r\n  DEV: {\r\n    baseUrl: \"http://localhost:8000/api\",\r\n    ROOT: \"http://localhost:8000\",\r\n  },\r\n  PROD: {\r\n    baseUrl: \"/api\",\r\n    ROOT: \"\",\r\n  },\r\n};\r\n\r\nexport const BASE_URL = CONF[ENVIRON].baseUrl;\r\nexport const ROOT_URL = CONF[ENVIRON].ROOT;\r\nexport const GOOGLE_API_KEY = \"AIzaSyDQ7WXCqy5-cyHTyho_XLgBDHJZe4n-nAw\";\r\n","import React from \"react\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { ROOT_URL } from \"../../conf\";\r\n\r\nfunction Attachment({ doc }) {\r\n  console.log(doc);\r\n  let split = doc.file.split(\"/\");\r\n  let name = split[split.length - 1];\r\n  return (\r\n    <>\r\n      <span className=\"text-ellipsis\">{name}</span>\r\n      <a\r\n        href={`${ROOT_URL}/media/${doc.file}`}\r\n        className=\"borded-link\"\r\n        download\r\n      >\r\n        <MatIcon name=\"arrow_downward\" />\r\n      </a>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Attachment;\r\n","import React from \"react\";\r\nimport { COMPLAINT_ATTACHMENTS } from \"../../helpers/GraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport Attachment from \"./Attachment\";\r\n\r\nfunction ComplaintAttachements({ complaint_id }) {\r\n  const { loading, error, data } = useQuery(COMPLAINT_ATTACHMENTS, {\r\n    variables: { complaint_id: complaint_id },\r\n  });\r\n  if (loading || error) {\r\n    return null;\r\n  }\r\n  const attachments = data.complaintAttachments;\r\n  return (\r\n    <ul className=\"attachments mb-1\">\r\n      <li>\r\n        <b>Attachments</b>\r\n      </li>\r\n      {attachments.map((doc) => (\r\n        <li key={doc.id}>\r\n          <Attachment doc={doc} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ComplaintAttachements;\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { GET_COMPLAINT } from \"../../helpers/GraphQL\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { useRef } from \"react\";\r\nimport Modal from \"../../components/modals/Modal\";\r\nimport FeedbackForm from \"./FeedbackForm\";\r\nimport ComplaintAttachements from \"./ComplaintAttachements\";\r\nlet dayjs = require(\"dayjs\");\r\nlet html2canvas = require(\"html2canvas\");\r\n\r\nfunction ComplaintDetailViewPage({ match }) {\r\n  useProfile();\r\n  const detailsView = useRef(null);\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [img, setImg] = useState(null);\r\n  const { loading, error, data } = useQuery(GET_COMPLAINT, {\r\n    variables: { id: match.params.id },\r\n  });\r\n\r\n  error && console.error(error);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  let complaint = data.complaint;\r\n  function calc_kpi_days(open, close) {\r\n    console.log(`Open: ${open}`, `Close: ${close}`);\r\n    if (!close) {\r\n      close = dayjs().format(\"YYYY-MM-DD\");\r\n    }\r\n    if (open.indexOf(\"T\")) open = open.split(\"T\")[0];\r\n    if (close.indexOf(\"T\")) close = close.split(\"T\")[0];\r\n    console.log(`Open: ${open}`, `Close: ${close}`);\r\n    return dayjs(close).diff(dayjs(open), \"day\");\r\n  }\r\n  function detailsImage(e) {\r\n    let btn = e.target;\r\n    console.log(btn);\r\n    html2canvas(detailsView.current, { scrollY: -window.scrollY }).then(\r\n      (canvas) => {\r\n        // document.body.appendChild(canvas);\r\n        console.log(canvas);\r\n        let dt = canvas.toDataURL(\"image/png\");\r\n        // downloadURI(dt, \"test.png\");\r\n        setImg(dt);\r\n        setFeedback(true);\r\n      }\r\n    );\r\n  }\r\n  const {\r\n    id,\r\n    clientName,\r\n    location,\r\n    nature,\r\n    openDate,\r\n    details,\r\n    actionPlan,\r\n    closeDate,\r\n    costCenter,\r\n    financialImpact,\r\n    rca,\r\n    responsiblePerson,\r\n    results,\r\n    status,\r\n    assignedTo,\r\n    assignedAt,\r\n    closedBy,\r\n  } = complaint;\r\n  const fmtDate = (strDate) => {\r\n    if (strDate) {\r\n      if (strDate.indexOf(\"T\")) strDate = strDate.split(\"T\")[0];\r\n      return dayjs(strDate).format(\"DD/MM/YYYY\");\r\n    }\r\n    return null;\r\n  };\r\n  return (\r\n    <div className=\"details\">\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/complaints\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Complete Complaint Information</h5>\r\n        </div>\r\n      </div>\r\n      <div className=\"details-grid\" ref={detailsView}>\r\n        <div className=\"grid-form-details\">\r\n          <div>\r\n            <label>Client Name</label>\r\n            <p>{clientName}</p>\r\n          </div>\r\n          <div>\r\n            <label>Location</label>\r\n            <p>{location.name}</p>\r\n          </div>\r\n          <div>\r\n            <label>Nature</label>\r\n            <p>{nature.name}</p>\r\n          </div>\r\n          <div>\r\n            <label>Open Date</label>\r\n            <p>{fmtDate(openDate)}</p>\r\n          </div>\r\n          <div className=\"span\">\r\n            <label>Details</label>\r\n            <p>{details}</p>\r\n          </div>\r\n          <div className=\"span\">\r\n            <label>Details</label>\r\n            <p>{details}</p>\r\n          </div>\r\n          <div>\r\n            <label>Action Plan</label>\r\n            <p>{actionPlan}</p>\r\n          </div>\r\n          <div>\r\n            <label>Root Cause Analysis</label>\r\n            <p>{rca}</p>\r\n          </div>\r\n          <div className=\"span\">\r\n            <label>Results</label>\r\n            <p>{results}</p>\r\n          </div>\r\n          <div className=\"span\">\r\n            <label>Financial Impact</label>\r\n            <p>{financialImpact}</p>\r\n          </div>\r\n          <div>\r\n            <label>Cost Center</label>\r\n            <p>{costCenter}</p>\r\n          </div>\r\n          <div>\r\n            <label>Responsible Person</label>\r\n            <p>{responsiblePerson}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"sidebar mt-1 bg-light\">\r\n          <div className=\"status\">\r\n            <label>\r\n              Status: <span>{status}</span>\r\n            </label>\r\n          </div>\r\n          <ul>\r\n            {openDate && (\r\n              <li>\r\n                <MatIcon name=\"done\" />\r\n                On {fmtDate(openDate)}, Created\r\n              </li>\r\n            )}\r\n            {assignedTo && (\r\n              <li>\r\n                <MatIcon name=\"done\" /> On {fmtDate(assignedAt)}, Assigned to{\" \"}\r\n                {assignedTo.username}\r\n              </li>\r\n            )}\r\n            {closedBy && (\r\n              <li>\r\n                <MatIcon name=\"done\" />\r\n                On {fmtDate(closeDate)}, Closed by {closedBy.username}\r\n              </li>\r\n            )}\r\n            <li className=\"kpi\">\r\n              KPI:\r\n              <span className=\"ml-1\">\r\n                <b>{calc_kpi_days(openDate, closeDate)}</b> day(s)\r\n              </span>\r\n            </li>\r\n          </ul>\r\n          <ComplaintAttachements complaint_id={id} />\r\n          {status === \"COMPLETED\" && (\r\n            <button className=\"send-feedback btn ripple\" onClick={detailsImage}>\r\n              <MatIcon name=\"mail_outline\" text=\"Send Feedback To Customer\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {feedback && (\r\n        <Modal\r\n          title={`Feedback To: ${complaint.clientName}`}\r\n          onClose={() => setFeedback(false)}\r\n        >\r\n          <FeedbackForm\r\n            complaint={complaint}\r\n            img={img}\r\n            onComplete={() => setFeedback(false)}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ComplaintDetailViewPage);\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Route, NavLink } from \"react-router-dom\";\r\n\r\nimport Table from \"../components/tables/Table\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport { COMPLAINTS } from \"../helpers/GraphQL\";\r\nimport NewComplaintRegisterPage from \"./complaints/NewComplaintRegisterPage\";\r\nimport Modal from \"../components/modals/Modal\";\r\nimport AssignComplaintPopup from \"./complaints/AssignComplaintPopup\";\r\nimport UpdateComplaintForm from \"./complaints/UpdateComplaintForm\";\r\nimport useProfile from \"../components/hooks/useProfile\";\r\nimport Pagination from \"../components/tables/Pagination\";\r\nimport { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport ComplaintDetailViewPage from \"./complaints/ComplaintDetailViewPage\";\r\nconst PAGE_SIZE = 10;\r\nfunction ComplaintsPage() {\r\n  const [pageNo, setPageNo] = useState(1);\r\n  let firstRender = useRef(true);\r\n  useProfile();\r\n  const complaintsQuery = useQuery(COMPLAINTS, {\r\n    variables: { pageSize: PAGE_SIZE, pageNo: pageNo },\r\n  });\r\n  useEffect(() => {\r\n    if (firstRender) {\r\n      firstRender = false;\r\n      return;\r\n    }\r\n    console.log(\"Page changed\", complaintsQuery);\r\n    complaintsQuery.refetch({\r\n      variables: { pageSize: PAGE_SIZE, pageNo: pageNo },\r\n    });\r\n  }, [pageNo]);\r\n  const [assign, setAssign] = useState(false);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  if (complaintsQuery.loading) return <p>Loading...</p>;\r\n  if (complaintsQuery.error) return <p>Error :(</p>;\r\n\r\n  const columns = [\r\n    { name: \"id\", label: \"ID\" },\r\n    { name: \"clientName\", label: \"Client Name\" },\r\n    { name: \"location_name\", label: \"Location\" },\r\n    { name: \"openDate\", label: \"Open Date\" },\r\n    { name: \"nature_name\", label: \"Nature of Complaint\" },\r\n    { name: \"status\", label: \"Status\" },\r\n    {\r\n      name: \"assigned_to\",\r\n      label: \"Assigned To\",\r\n      render: (row) =>\r\n        row.assignedTo ? (\r\n          <span>{row.assignedTo.username}</span>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              setAssign(true);\r\n              setSelected(row);\r\n            }}\r\n          >\r\n            Assign\r\n          </button>\r\n        ),\r\n    },\r\n    { name: \"details\", label: \"Details\", className: \"col-ellipsis\" },\r\n    {\r\n      name: \"updateDetails\",\r\n      label: \"\",\r\n      render: (row) =>\r\n        row.status === \"ASSIGNED\" ? (\r\n          <NavLink\r\n            className=\"btn btn-light p-1 d-flex align-left\"\r\n            to={`/complaints/update/${row.id}`}\r\n          >\r\n            <MatIcon name=\"settings\" text=\"Complete\" />\r\n          </NavLink>\r\n        ) : null,\r\n    },\r\n    {\r\n      name: \"viewDetails\",\r\n      render: (row) => (\r\n        <NavLink to={`/complaints/view/${row.id}`} className=\"d-flex\">\r\n          <MatIcon name=\"unfold_more\" />\r\n        </NavLink>\r\n      ),\r\n    },\r\n  ];\r\n  const fmtDate = (strDate) => {\r\n    let parsed = Date.parse(strDate);\r\n    return new Date(parsed).toLocaleDateString(\"en-GB\");\r\n  };\r\n  const records = complaintsQuery.data.complaints.map((r) => ({\r\n    ...r,\r\n    nature_name: r.nature.name,\r\n    location_name: r.location ? r.location.name : \"\",\r\n    openDate: fmtDate(r.openDate),\r\n  }));\r\n  return (\r\n    <>\r\n      <Route path=\"/complaints\" exact>\r\n        <div className=\"toolbar\">\r\n          <h5>List of complaints</h5>\r\n          <NavLink\r\n            className=\"d-flex btn has-left-icon\"\r\n            to=\"/complaints/new-complaint\"\r\n          >\r\n            <MatIcon name=\"add\" text=\"New Complaint\" />\r\n          </NavLink>\r\n        </div>\r\n        <Table columns={columns} data={records} />\r\n        <Pagination\r\n          pageNo={pageNo}\r\n          onPageChanged={(newPageNo) => {\r\n            setPageNo(newPageNo);\r\n          }}\r\n          lastPage={complaintsQuery.data.complaints.length < PAGE_SIZE}\r\n        />\r\n      </Route>\r\n      <Route path=\"/complaints/new-complaint\" exact>\r\n        <NewComplaintRegisterPage />\r\n      </Route>\r\n      <Route path=\"/complaints/update/:id\" exact>\r\n        <UpdateComplaintForm />\r\n      </Route>\r\n      <Route path=\"/complaints/view/:id\" exact>\r\n        <ComplaintDetailViewPage />\r\n      </Route>\r\n      {assign && (\r\n        <Modal title={selected.clientName} onClose={() => setAssign(false)}>\r\n          <AssignComplaintPopup\r\n            complaint={selected}\r\n            onComplete={() => setAssign(false)}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ComplaintsPage;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { REGISTER_USER, USERS, USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport Input from \"../../components/forms/Input\";\r\n\r\nfunction NewUserPage() {\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerUser, { loading }] = useMutation(REGISTER_USER);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    registerUser({\r\n      variables: {\r\n        ...formData,\r\n      },\r\n      refetchQueries: [{ query: USERS }, { query: USERS_GET_ME }],\r\n    }).then(\r\n      () => setRedirect(\"/users\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/users\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Register New User</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form form-medium\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            required\r\n          />\r\n          <Input\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewUserPage;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect, withRouter } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport {\r\n  REGISTER_USER,\r\n  USERS,\r\n  USERS_GET_ME,\r\n  GET_USER,\r\n} from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport Input from \"../../components/forms/Input\";\r\n\r\nfunction UpdateUserPage({ match }) {\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerUser, {}] = useMutation(REGISTER_USER);\r\n  const { loading, error, data } = useQuery(GET_USER, {\r\n    variables: { id: match.params.id },\r\n  });\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  let user = data.user;\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    let prev = new Map();\r\n    Object.keys(user).forEach((key) => {\r\n      if (!formData[key]) {\r\n        prev[key] = user[key];\r\n      }\r\n    });\r\n\r\n    registerUser({\r\n      variables: { ...formData, ...prev, id: user.id },\r\n      refetchQueries: [{ query: USERS }, { query: USERS_GET_ME }],\r\n    }).then(\r\n      () => setRedirect(\"/users\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/users\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Update User</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form form-medium\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.username}\r\n            readOnly={true}\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            required\r\n            defaultValue={user.email}\r\n          />\r\n          <Input\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.firstName}\r\n          />\r\n          <Input\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.lastName}\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(UpdateUserPage);\r\n","import React from \"react\";\r\nimport { USERS } from \"../helpers/UsersGraphQL\";\r\nimport NewUserPage from \"./users/NewUserPage\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Route, NavLink, useHistory } from \"react-router-dom\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport Table from \"../components/tables/Table\";\r\nimport useProfile from \"../components/hooks/useProfile\";\r\nimport UpdateUserPage from \"./users/UpdateUserPage\";\r\n\r\nfunction UserManagementPage(props) {\r\n  useProfile();\r\n  const { loading, error, data } = useQuery(USERS);\r\n  if (loading) return null;\r\n  if (error) {\r\n    return <p>Error (:</p>;\r\n  }\r\n  const columns = [\r\n    { name: \"id\", label: \"ID\" },\r\n    { name: \"username\", label: \"Client Name\" },\r\n    { name: \"email\", label: \"Email\" },\r\n    { name: \"name\", label: \"Full Name\" },\r\n    {\r\n      name: \"actions\",\r\n      label: \"\",\r\n      render: (row) => (\r\n        <div>\r\n          <a href={`/users/update/${row.id}`} className=\"d-flex align-left\">\r\n            <MatIcon name=\"edit\" text=\"Edit\" />\r\n          </a>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const records = data.users.map((r) => ({\r\n    ...r,\r\n    name: r.firstName ? `${r.firstName} ${r.lastName}` : null,\r\n  }));\r\n  return (\r\n    <>\r\n      <Route path=\"/users\" exact>\r\n        <div className=\"toolbar\">\r\n          <h5>List of users</h5>\r\n          <NavLink\r\n            className=\"d-flex btn btn-light has-left-icon\"\r\n            to=\"/users/new-user\"\r\n          >\r\n            <MatIcon name=\"add\" text=\"New User\" />\r\n          </NavLink>\r\n        </div>\r\n        <Table columns={columns} data={records} />\r\n      </Route>\r\n      <Route path=\"/users/new-user\" exact>\r\n        <NewUserPage />\r\n      </Route>\r\n      <Route path=\"/users/update/:id\" exact>\r\n        <UpdateUserPage />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserManagementPage;\r\n","import { BASE_URL, CLIENT_ID, CLIENT_SECRET } from \"../conf\";\r\nconst ACCESS_TOKEN = \"AccessToken\";\r\n\r\nconst AuthHelper = {\r\n  saveToken: (token, cb) => {\r\n    sessionStorage.setItem(ACCESS_TOKEN, token);\r\n    cb(true);\r\n  },\r\n  getToken: () => sessionStorage.getItem(ACCESS_TOKEN),\r\n  removeToken: () => sessionStorage.removeItem(ACCESS_TOKEN),\r\n};\r\n\r\nexport default AuthHelper;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../components/forms/Input\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport AuthHelper from \"../helpers/AuthHelper\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_TOKEN, USERS_GET_ME } from \"../helpers/UsersGraphQL\";\r\nimport { COMPLAINTS } from \"../helpers/GraphQL\";\r\n\r\nfunction LoginPage(props) {\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [login, { loading, client }] = useMutation(USERS_GET_TOKEN);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    client.clearStore();\r\n    login({\r\n      variables: {\r\n        ...formData,\r\n      },\r\n    }).then(\r\n      (res) => {\r\n        if (res.data) {\r\n          let { token } = res.data.tokenAuth;\r\n          AuthHelper.saveToken(token, () => {\r\n            setRedirect(\"/\");\r\n          });\r\n        }\r\n      },\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <>\r\n      <div className=\"login-page box-shadow\">\r\n        <div className=\"login-header d-flex mb-1 p-1\">\r\n          <h3>Twiga - CCMS</h3>\r\n          <img\r\n            src={\r\n              process.env.PUBLIC_URL + \"/static/images/complaints_register.png\"\r\n            }\r\n            alt=\"Image\"\r\n          />\r\n        </div>\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n          <div className=\"mt-1\">\r\n            <Input\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-footer\">\r\n            <button>\r\n              <span className=\"mr-1\">Login</span>\r\n              <MatIcon name=\"login\" />\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\nimport NavBar from \"./components/nav/NavBar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ComplaintsPage from \"./pages/ComplaintsPage\";\nimport UserManagementPage from \"./pages/UserManagementPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport AuthHelper from \"./helpers/AuthHelper\";\nimport { BASE_URL } from \"./conf\";\nconst getToken = () => {\n  const token = AuthHelper.getToken();\n  return token ? `JWT ${token}` : \"\";\n};\nconst requestMiddleware = (operation) => {\n  operation.setContext({\n    headers: {\n      Authorization: getToken(),\n    },\n  });\n};\nconst client = new ApolloClient({\n  uri: `${BASE_URL}/graphql`,\n  request: requestMiddleware,\n});\n\nfunction App() {\n  return (\n    <Router>\n      <ApolloProvider client={client}>\n        <Switch>\n          <Route path=\"/login\" exact>\n            <LoginPage />\n          </Route>\n          <Route path=\"/\">\n            <NavBar />\n            <section className=\"page-content container\">\n              <div className=\"content\">\n                <Switch>\n                  <Route path=\"/\" exact>\n                    <HomePage />\n                  </Route>\n                  <Route path=\"/complaints\">\n                    <ComplaintsPage />\n                  </Route>\n                  <Route path=\"/users\">\n                    <UserManagementPage />\n                  </Route>\n                </Switch>\n              </div>\n            </section>\n          </Route>\n        </Switch>\n      </ApolloProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}