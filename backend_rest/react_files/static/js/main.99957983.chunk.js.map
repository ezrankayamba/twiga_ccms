{"version":3,"sources":["helpers/UsersGraphQL.js","components/nav/UserProfile.js","components/hooks/useProfile.js","components/nav/NavBar.js","helpers/ReportsGraphQL.js","components/graph/BarGraph.js","helpers/ColorsHelper.js","pages/dashboard/ComplaintsByNatureGraph.js","components/graph/PieChart.js","pages/dashboard/ComplaintsByStatusGraph.js","pages/dashboard/ComplaintsByLocationGraph.js","pages/dashboard/ComplaintsKPIGraph.js","helpers/GraphQL.js","components/forms/Input.js","components/forms/Select.js","components/forms/FilterExport.js","helpers/Dates.js","pages/dashboard/FilterForm.js","pages/HomePage.js","components/tables/Table.js","components/icons/MatIcon.js","helpers/FileUpload.js","constants.js","pages/complaints/NewComplaintRegisterPage.js","components/modals/Modal.js","pages/complaints/AssignComplaintPopup.js","pages/complaints/UpdateComplaintForm.js","components/tables/Pagination.js","pages/complaints/FeedbackForm.js","conf.js","pages/complaints/Attachment.js","pages/complaints/ComplaintAttachements.js","pages/complaints/ComplaintDetailViewPage.js","pages/complaints/FilterForm.js","pages/ComplaintsPage.js","pages/users/NewUserPage.js","pages/users/UpdateUserPage.js","pages/UserManagementPage.js","helpers/AuthHelper.js","pages/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["USERS_GET_TOKEN","gql","USERS_GET_ME","USERS","REGISTER_USER","GET_USER","UserProfile","props","useQuery","loading","error","data","console","log","className","me","username","exact","to","useProfile","history","useHistory","graphQLErrors","length","message","push","NavBar","user","isSuperuser","NATURE_SUMMARY","STATUS_SUMMARY","LOCATION_SUMMARY","KPI_SUMMARY","BarGraph","graphId","meta","title","extra","type","stacked","useEffect","datasets","labels","options","legend","display","window","screen","width","position","plugins","datalabels","hover","mode","intersect","tooltips","displayColors","callbacks","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","callback","value","toLocaleString","userCallback","label","index","Math","floor","Chart","document","getElementById","id","style","ColorsHelper","randomColor","color","i","random","randomColors","num","Array","keys","map","contrastColors","colors","c","invert","ComplaintsByNatureGraph","filter","useLazyQuery","variables","fetchData","abortCtrl","AbortController","abort","natureSummary","natureList","d","name","v","a","indexOf","count","s","backgroundColor","p","x","find","status","r","PieChart","onDataClick","bgColors","formatter","ctx","sum","chart","toFixed","onClick","_","els","slice","_index","myPieChart","ComplaintsByStatusGraph","statusSummary","ComplaintsByLocationGraph","locationSummary","locName","locCount","ComplaintsKPIGraph","placeHolder","kpiSummary","natureName","nat","COMPLAINTS","GET_COMPLAINT","NATURES","COMPLAINT_ATTACHMENTS","LOCATIONS","REGISTER_COMPLAINT","UPDATE_ASSIGN_COMPLAINT","UPDATE_DETAILS_COMPLAINT","SEND_FEEDBACK","GET_STATUSES","Input","help","cls","htmlFor","Select","query","skip","o","key","FilterExport","fields","handleChange","handleSubmit","handleExport","filterLabel","onSubmit","f","onChange","Dates","date","timeIncl","Date","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minutes","getMinutes","dateStr","join","timeStr","res","FilterForm","useState","formData","setFormData","startDate","setDate","searchFields","defaultValue","now","e","preventDefault","target","HomePage","Map","setFilter","Table","columns","idCol","col","row","render","MatIcon","text","attachmentsChangeHandler","cb","files","theFiles","reader","FileReader","file","addEventListener","result","filename","updateAttachements","readAsDataURL","COMPLAINTS_FILTER_VARS","pageSize","pageNo","NewComplaintRegisterPage","natures","locations","redirect","setRedirect","useMutation","registerComplaint","natureOptions","locationOptions","attachments","setAttachments","openDate","refetchQueries","awaitRefetchQueries","then","required","max","toISOString","split","maxLength","multiple","Modal","onClose","children","posx","posy","AssignComplaintPopup","complaint","onComplete","users","assignTo","userOptions","withRouter","match","params","updateDetails","inputsConf","prev","Object","forEach","details","actionPlan","rca","results","rows","financialImpact","costCenter","responsiblePerson","Pagination","onPageChanged","lastPage","disabled","FeedbackForm","img","sendFeedback","email","setEmail","remarks","setRemarks","encType","CONF","DEV","baseUrl","ROOT","PROD","BASE_URL","ROOT_URL","Attachment","doc","href","download","ComplaintAttachements","complaint_id","complaintAttachments","dayjs","require","html2canvas","detailsView","useRef","feedback","setFeedback","setImg","open","close","clientName","location","nature","closeDate","assignedTo","assignedAt","closedBy","fmtDate","strDate","format","ref","diff","btn","current","scrollY","canvas","dt","toDataURL","ComplaintsPage","setPageNo","getComplaints","assign","setAssign","selected","setSelected","parsed","parse","toLocaleDateString","records","complaints","nature_name","location_name","path","entries","q","fetch","response","blob","url","URL","createObjectURL","createElement","body","appendChild","click","remove","newPageNo","NewUserPage","registerUser","readOnly","firstName","lastName","UserManagementPage","AuthHelper","saveToken","token","sessionStorage","setItem","getToken","getItem","removeToken","removeItem","LoginPage","login","client","src","alt","clearStore","tokenAuth","ApolloClient","uri","request","operation","setContext","headers","Authorization","App","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.99957983.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\r\nexport const USERS_GET_TOKEN = gql`\r\n  mutation getToken($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERS_GET_ME = gql`\r\n  query getMe {\r\n    me {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERS = gql`\r\n  query getUsers {\r\n    users {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_USER = gql`\r\n  mutation registerUser(\r\n    $id: ID\r\n    $username: String!\r\n    $email: String!\r\n    $firstName: String\r\n    $lastName: String\r\n  ) {\r\n    registerUser(\r\n      id: $id\r\n      username: $username\r\n      email: $email\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n    ) {\r\n      user {\r\n        id\r\n        username\r\n        dateJoined\r\n        firstName\r\n        lastName\r\n        lastLogin\r\n        email\r\n        isStaff\r\n        isSuperuser\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER = gql`\r\n  query getUser($id: ID!) {\r\n    user(id: $id) {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction UserProfile(props) {\r\n  let { loading, error, data } = useQuery(USERS_GET_ME);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  console.log(data);\r\n  return (\r\n    <div className=\"user-profile-nav\">\r\n      <ul>\r\n        <li>\r\n          <b>{data.me.username}</b>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/login\">\r\n            Logout\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction useProfile() {\r\n  const history = useHistory();\r\n  const { loading, error, data } = useQuery(USERS_GET_ME);\r\n  if (loading) return null;\r\n  if (error) {\r\n    if (error.graphQLErrors.length) {\r\n      let message = error.graphQLErrors[0].message;\r\n      if (\r\n        message === \"Signature has expired\" ||\r\n        message === \"You do not have permission to perform this action\"\r\n      ) {\r\n        history.push(\"/login\");\r\n      }\r\n    }\r\n    console.log(error);\r\n    return null;\r\n  }\r\n  return data;\r\n}\r\n\r\nexport default useProfile;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport useProfile from \"../hooks/useProfile\";\r\n\r\nfunction NavBar() {\r\n  const user = useProfile();\r\n  console.log(user);\r\n  return (\r\n    <header className=\"navbar container\">\r\n      <div className=\"content\">\r\n        <h3>Twiga - CCMS</h3>\r\n        <div className=\"nav-links\">\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to=\"/\">\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/complaints\">Complaints</NavLink>\r\n            </li>\r\n            {user && user.me && user.me.isSuperuser && (\r\n              <li>\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n              </li>\r\n            )}\r\n          </ul>\r\n          <UserProfile />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const NATURE_SUMMARY = gql`\r\n  query natureSummary(\r\n    $dateFrom: Date\r\n    $dateTo: Date\r\n    ) {\r\n    natureSummary(\r\n      dateFrom: $dateFrom\r\n      dateTo: $dateTo\r\n      ) {\r\n      name\r\n      status\r\n      count\r\n    }\r\n  }\r\n`;\r\n\r\nexport const STATUS_SUMMARY = gql`\r\n  query statusSummary(\r\n    $dateFrom: Date\r\n    $dateTo: Date\r\n    ) {\r\n    statusSummary(\r\n      dateFrom: $dateFrom\r\n      dateTo: $dateTo\r\n      ) {\r\n      name\r\n      count\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOCATION_SUMMARY = gql`\r\n  query getLocSummary(\r\n    $dateFrom: Date\r\n    $dateTo: Date\r\n    ) {\r\n    locationSummary(\r\n      dateFrom: $dateFrom\r\n      dateTo: $dateTo\r\n      ) {\r\n      locName\r\n      locCount\r\n    }\r\n  }\r\n`;\r\n\r\nexport const KPI_SUMMARY = gql`\r\n  query kpi(\r\n    $dateFrom: Date\r\n    $dateTo: Date\r\n    ) {\r\n    kpiSummary(\r\n      dateFrom: $dateFrom\r\n      dateTo: $dateTo\r\n      ) {\r\n      name\r\n      count\r\n      natureName\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport Numbers from \"../../helpers/Numbers\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst BarGraph = ({\r\n  graphId,\r\n  meta,\r\n  title,\r\n  extra = null,\r\n  type = \"bar\",\r\n  stacked = false,\r\n}) => {\r\n  useEffect(() => {\r\n    const data = {\r\n      datasets: meta.data,\r\n      labels: meta.labels,\r\n    };\r\n    console.log(data);\r\n    const options = {\r\n      legend: {\r\n        display: window.screen.width > 800,\r\n        position: \"top\",\r\n      },\r\n      plugins: {\r\n        datalabels: {\r\n          display: false,\r\n        },\r\n      },\r\n      hover: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n      },\r\n      tooltips: {\r\n        displayColors: true,\r\n        callbacks: {\r\n          mode: \"x\",\r\n        },\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            stacked: stacked,\r\n            gridLines: {\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            stacked: stacked,\r\n            ticks: {\r\n              beginAtZero: meta.beginAtZero || false,\r\n              callback: function (value) {\r\n                return value.toLocaleString();\r\n              },\r\n              userCallback: function (label, index, labels) {\r\n                if (Math.floor(label) === label) {\r\n                  return label;\r\n                }\r\n              },\r\n            },\r\n            type: \"linear\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    new Chart(document.getElementById(graphId), {\r\n      type: type,\r\n      data: data,\r\n      options: options,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`graph-container bg-white card ${extra ? extra : \"\"}`}>\r\n      <h6 className=\"pl-1\">{title}</h6>\r\n      <div>\r\n        <canvas id={graphId} className=\"graph p-1\" style={{}}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n","import invert from \"invert-color\";\r\nexport const ColorsHelper = {\r\n  randomColor() {\r\n    var letters = \"0123456789ABCDEF\";\r\n    var color = \"#\";\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  },\r\n  randomColors(num) {\r\n    return [...Array(num).keys()].map(() => this.randomColor());\r\n  },\r\n  contrastColors(colors) {\r\n    return colors.map(c => invert(c));\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { NATURE_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useLazyQuery, useQuery } from \"@apollo/react-hooks\";\r\nimport BarGraph from \"../../components/graph/BarGraph\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\n\r\nfunction ComplaintsByNatureGraph({ filter }) {\r\n  useProfile();\r\n\r\n  const [fetchData, { loading, data, error }] = useLazyQuery(NATURE_SUMMARY, {\r\n    variables: { ...filter },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const abortCtrl = new AbortController();\r\n    console.log(filter)\r\n    fetchData()\r\n    return () => {\r\n      abortCtrl.abort();\r\n    }\r\n  }, [filter])\r\n\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  if (!data) return null;\r\n  console.log(data);\r\n\r\n  let placeHolder = [\r\n    { name: \"Not Assigned\", count: 0 },\r\n    { name: \"Assigned\", count: 0 },\r\n    { name: \"Completed\", count: 0 },\r\n    { name: \"Feedback Sent\", count: 0 },\r\n  ];\r\n  console.log(data.natureSummary);\r\n\r\n  let natureList = data.natureSummary\r\n    .map((d) => {\r\n      return d.name;\r\n    })\r\n    .filter((v, i, a) => a.indexOf(v) === i);\r\n  let res = placeHolder.map((s) => {\r\n    return {\r\n      label: s.name,\r\n      backgroundColor: ColorsHelper.randomColor(),\r\n      data: natureList.map((p) => {\r\n        let x = data.natureSummary.find(\r\n          (d) => d.name === p && d.status === s.name\r\n        );\r\n        return x ? x.count : 0;\r\n      }),\r\n    };\r\n  });\r\n\r\n  const meta = {\r\n    data: res,\r\n    labels: natureList.map((r) => r),\r\n    beginAtZero: true,\r\n  };\r\n  return (\r\n    <BarGraph\r\n      stacked={true}\r\n      meta={meta}\r\n      title=\"Complaints Nature Summary\"\r\n      graphId=\"complaints-nature-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComplaintsByNatureGraph;\r\n","import React from \"react\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\nimport Chart from \"chart.js\";\r\nimport { useEffect } from \"react\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\n\r\nconst PieChart = ({ meta, graphId, title, colors, onDataClick }) => {\r\n  useEffect(() => {\r\n    let bgColors = colors || ColorsHelper.randomColors(meta.data.length);\r\n    let fntColors = ColorsHelper.contrastColors(bgColors);\r\n    let options = {\r\n      legend: {\r\n        position: \"right\",\r\n      },\r\n      plugins: {\r\n        datalabels: {\r\n          formatter: (value, ctx) => {\r\n            let sum = 0;\r\n            let dataArr = ctx.chart.data.datasets[0].data;\r\n            dataArr.map((data) => {\r\n              sum += data;\r\n            });\r\n            let percentage = ((value * 100) / sum).toFixed(0) + \"%\";\r\n            return percentage;\r\n          },\r\n          color: fntColors,\r\n        },\r\n      },\r\n      onClick: (_, els) => {\r\n        if (els && els.length && onDataClick) {\r\n          let data = meta.data.slice(els[0]._index, els[0]._index + 1)[0];\r\n          onDataClick(data);\r\n        }\r\n      },\r\n    };\r\n    let data = {\r\n      datasets: [\r\n        {\r\n          data: meta.data.map((d) => d.value),\r\n          backgroundColor: bgColors,\r\n        },\r\n      ],\r\n      labels: meta.data.map((d) => d.name),\r\n    };\r\n\r\n    var myPieChart = new Chart(document.getElementById(graphId), {\r\n      type: \"pie\",\r\n      data: data,\r\n      options: options,\r\n    });\r\n    console.log(myPieChart);\r\n  }, []);\r\n  return (\r\n    <div className=\"graph-container bg-white card p-2\">\r\n      <h6 className=\"pl-1\">{title}</h6>\r\n      <div>\r\n        <canvas id={graphId} className=\"graph p-1\" style={{}}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { STATUS_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useLazyQuery, useQuery } from \"@apollo/react-hooks\";\r\nimport PieChart from \"../../components/graph/PieChart\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\n\r\nfunction ComplaintsByStatusGraph({ filter }) {\r\n  useProfile();\r\n  const [fetchData, { loading, data, error }] = useLazyQuery(STATUS_SUMMARY, {\r\n    variables: { ...filter },\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    const abortCtrl = new AbortController();\r\n    console.log(filter)\r\n    fetchData()\r\n    return () => {\r\n      abortCtrl.abort();\r\n    }\r\n  }, [filter])\r\n\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  if (!data) return null;\r\n  console.log(data);\r\n\r\n  const meta = {\r\n    data: data.statusSummary.map((r) => {\r\n      return {\r\n        name: r.name,\r\n        value: r.count,\r\n      };\r\n    }),\r\n  };\r\n  return (\r\n    <PieChart\r\n      meta={meta}\r\n      title=\"Complaints Status Summary\"\r\n      graphId=\"complaints-status-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComplaintsByStatusGraph;\r\n","import React, { useEffect } from \"react\";\r\nimport { LOCATION_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useLazyQuery, useQuery } from \"@apollo/react-hooks\";\r\nimport PieChart from \"../../components/graph/PieChart\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\n\r\nfunction ComplaintsByLocationGraph({ filter }) {\r\n  useProfile();\r\n\r\n  const [fetchData, { loading, data, error }] = useLazyQuery(LOCATION_SUMMARY, {\r\n    variables: { ...filter },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const abortCtrl = new AbortController();\r\n    console.log(filter)\r\n    fetchData()\r\n    return () => {\r\n      abortCtrl.abort();\r\n    }\r\n  }, [filter])\r\n\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  if (!data) return null;\r\n  console.log(data);\r\n\r\n  const meta = {\r\n    data: data.locationSummary.map((r) => {\r\n      return {\r\n        name: r.locName,\r\n        value: r.locCount,\r\n      };\r\n    }),\r\n  };\r\n  return (\r\n    <PieChart\r\n      meta={meta}\r\n      title=\"Complaints Location Summary\"\r\n      graphId=\"complaints-location-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComplaintsByLocationGraph;\r\n","import React, { useEffect } from \"react\";\r\nimport { KPI_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useLazyQuery, useQuery } from \"@apollo/react-hooks\";\r\nimport PieChart from \"../../components/graph/PieChart\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport BarGraph from \"../../components/graph/BarGraph\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\n\r\nfunction ComplaintsKPIGraph({ filter }) {\r\n  useProfile();\r\n\r\n  const [fetchData, { loading, data, error }] = useLazyQuery(KPI_SUMMARY, {\r\n    variables: { ...filter },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const abortCtrl = new AbortController();\r\n    console.log(filter)\r\n    fetchData()\r\n    return () => {\r\n      abortCtrl.abort();\r\n    }\r\n  }, [filter])\r\n\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  if (!data) return null;\r\n  console.log(data);\r\n\r\n  let allProps = {\r\n    backgroundColor: \"rgba(255, 212, 0, .5)\",\r\n    borderWidth: 1,\r\n  };\r\n  let placeHolder = [\r\n    { name: \"1 week\", count: 0 },\r\n    { name: \"2 weeks\", count: 0 },\r\n    { name: \"3-4 weeks\", count: 0 },\r\n    { name: \"5-6 weeks\", count: 0 },\r\n    { name: \"7-8 weeks\", count: 0 },\r\n    { name: \"Above 8 weeks\", count: 0 },\r\n  ];\r\n  console.log(data.kpiSummary);\r\n\r\n  let natureList = data.kpiSummary\r\n    .map((d) => d.natureName)\r\n    .filter((v, i, a) => a.indexOf(v) === i);\r\n  let res = natureList.map((nat) => {\r\n    return {\r\n      label: nat,\r\n      backgroundColor: ColorsHelper.randomColor(),\r\n      data: placeHolder.map((p) => {\r\n        let x = data.kpiSummary.find(\r\n          (d) => d.natureName === nat && d.name === p.name\r\n        );\r\n        return x ? x.count : 0;\r\n      }),\r\n    };\r\n  });\r\n\r\n  const meta = {\r\n    data: res,\r\n    labels: placeHolder.map((r) => r.name),\r\n    beginAtZero: true,\r\n  };\r\n\r\n  return (\r\n    <BarGraph\r\n      stacked={true}\r\n      meta={meta}\r\n      title=\"Complaints KPI\"\r\n      graphId=\"complaints-kpi-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComplaintsKPIGraph;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const COMPLAINTS = gql`\r\n  query fetchComplaints(\r\n    $pageNo: Int\r\n    $pageSize: Int\r\n    $clientName: String\r\n    $location: Int\r\n    $nature: Int\r\n    $status: String\r\n    $dateFrom: Date\r\n    $dateTo: Date\r\n  ) {\r\n    complaints(\r\n      pageNo: $pageNo\r\n      pageSize: $pageSize\r\n      clientName: $clientName\r\n      location: $location\r\n      nature: $nature\r\n      status: $status\r\n      dateFrom: $dateFrom\r\n      dateTo: $dateTo\r\n    ) {\r\n      id\r\n      clientName\r\n      location {\r\n        id\r\n        name\r\n      }\r\n      openDate\r\n      status\r\n      details\r\n      rca\r\n      actionPlan\r\n      results\r\n      financialImpact\r\n      costCenter\r\n      responsiblePerson\r\n      dueDate\r\n      closeDate\r\n      assignedTo {\r\n        id\r\n        username\r\n      }\r\n      nature {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_COMPLAINT = gql`\r\n  query getComplaint($id: ID!) {\r\n    complaint(id: $id) {\r\n      id\r\n      clientName\r\n      openDate\r\n      status\r\n      details\r\n      rca\r\n      actionPlan\r\n      results\r\n      financialImpact\r\n      costCenter\r\n      responsiblePerson\r\n      dueDate\r\n      nature {\r\n        id\r\n        name\r\n      }\r\n      location {\r\n        id\r\n        name\r\n      }\r\n      assignedTo {\r\n        id\r\n        username\r\n      }\r\n      assignedAt\r\n      closedBy {\r\n        id\r\n        username\r\n      }\r\n      closeDate\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NATURES = gql`\r\n  query getNatures {\r\n    natures {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\nexport const COMPLAINT_ATTACHMENTS = gql`\r\n  query getComplAttachments($complaint_id: ID!) {\r\n    complaintAttachments(complaintId: $complaint_id) {\r\n      id\r\n      file\r\n    }\r\n  }\r\n`;\r\nexport const LOCATIONS = gql`\r\n  query getLocations {\r\n    locations {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_COMPLAINT = gql`\r\n  mutation createComplaint(\r\n    $details: String!\r\n    $clientName: String!\r\n    $openDate: DateTime!\r\n    $nature: ID!\r\n    $location: ID!\r\n    $attachments: [FileType]\r\n  ) {\r\n    registerComplaint(\r\n      details: $details\r\n      clientName: $clientName\r\n      nature: $nature\r\n      location: $location\r\n      openDate: $openDate\r\n      attachments: $attachments\r\n    ) {\r\n      complaint {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_ASSIGN_COMPLAINT = gql`\r\n  mutation assignTo($id: ID!, $userId: ID!) {\r\n    assignComplaint(id: $id, userId: $userId) {\r\n      complaint {\r\n        id\r\n        details\r\n        assignedTo {\r\n          id\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_DETAILS_COMPLAINT = gql`\r\n  mutation updateDetails(\r\n    $id: ID!\r\n    $rca: String!\r\n    $actionPlan: String!\r\n    $results: String!\r\n    $financialImpact: String!\r\n    $costCenter: String!\r\n    $responsiblePerson: String!\r\n    $attachments: [FileType]\r\n  ) {\r\n    updateComplaint(\r\n      id: $id\r\n      rca: $rca\r\n      actionPlan: $actionPlan\r\n      results: $results\r\n      financialImpact: $financialImpact\r\n      costCenter: $costCenter\r\n      responsiblePerson: $responsiblePerson\r\n      attachments: $attachments\r\n    ) {\r\n      complaint {\r\n        id\r\n        details\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SEND_FEEDBACK = gql`\r\n  mutation sendFeedback(\r\n    $attachments: [FileType]\r\n    $id: ID!\r\n    $email: String!\r\n    $remarks: String\r\n  ) {\r\n    feedback(\r\n      attachments: $attachments\r\n      id: $id\r\n      email: $email\r\n      remarks: $remarks\r\n    ) {\r\n      complaint {\r\n        id\r\n        clientName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_STATUSES = gql`\r\n  query getStatuses {\r\n    statuses {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nfunction Input({ label, name, help, type = \"text\", cls, ...props }) {\r\n  return (\r\n    <div className={`input-wrap ${cls || \"\"}`}>\r\n      <label htmlFor={name}>{label}</label>\r\n      {type === \"textarea\" ? (\r\n        <textarea name={name} id={name} {...props} />\r\n      ) : (\r\n        <input type={type} name={name} id={name} {...props} />\r\n      )}\r\n      {help && <span className=\"input-help\">{help}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction Select({ label, name, query, options = [], ...props }) {\r\n  let { loading, data, error } = useQuery(query ? query.name : USERS_GET_ME, {\r\n    skip: query === null,\r\n  });\r\n  if (loading || error) {\r\n    return null;\r\n  }\r\n\r\n  if (data && query) {\r\n    options = data[query.data];\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-wrap\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...props}>\r\n        <option value=\"\">---Select---</option>\r\n        {options.map((o) => (\r\n          <option key={o.id} value={o.id}>\r\n            {o.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport Input from \"./Input\";\r\nimport Select from \"./Select\";\r\n\r\nfunction FilterExport({\r\n  fields,\r\n  handleChange,\r\n  handleSubmit,\r\n  filter,\r\n  handleExport,\r\n  filterLabel\r\n}) {\r\n  return (\r\n    <div className=\"filter-export  w-100\">\r\n      <form className=\"form d-flex align-bottom\" onSubmit={handleSubmit}>\r\n        <div className=\"inline-fields\">\r\n          {fields.map((f, i) => {\r\n            return f.type && f.type === \"select\" ? (\r\n              <>\r\n                <Select key={f.name} {...f} onChange={handleChange} />\r\n              </>\r\n            ) : <>\r\n                <Input key={f.name} {...f} onChange={handleChange} />\r\n              </>;\r\n          })}\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          <button name=\"filter\">{filterLabel || 'Filter'}</button>\r\n          {handleExport && <button\r\n            className=\"ml-1\"\r\n            name=\"export\"\r\n            type=\"button\"\r\n            onClick={handleExport}\r\n          >\r\n            Export\r\n          </button>}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterExport;\r\n","export const Dates = {\r\n  fmt: function formatDate(date, timeIncl = false) {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear(),\r\n      hour = d.getHours(),\r\n      minutes = d.getMinutes();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n    if (hour < 10) hour = \"0\" + hour;\r\n    if (minutes < 10) minutes = \"0\" + minutes;\r\n\r\n    let dateStr = [year, month, day].join(\"-\")\r\n    let timeStr = `${hour}:${minutes < 10 ? \"0\" + minutes : minutes}:00.00`\r\n    let res = timeIncl ? dateStr + \"T\" + timeStr : dateStr;\r\n    return res\r\n  },\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { NATURES, LOCATIONS, GET_STATUSES } from \"../../helpers/GraphQL\";\r\nimport FilterExport from \"../../components/forms/FilterExport\";\r\nimport { Dates } from \"../../helpers/Dates\";\r\n\r\nfunction FilterForm({ handleSubmit, handleExport, filter = {} }) {\r\n  console.log(filter);\r\n  const [formData, setFormData] = useState(filter);\r\n  const startDate = new Date()\r\n  startDate.setDate(startDate.getDate() - 30)\r\n  const searchFields = [\r\n    {\r\n      name: \"dateFrom\",\r\n      label: \"From\",\r\n      type: \"date\",\r\n      defaultValue: filter[\"dateFrom\"] || Dates.fmt(startDate),\r\n    },\r\n    {\r\n      name: \"dateTo\",\r\n      label: \"To\",\r\n      type: \"date\",\r\n      defaultValue: filter[\"dateTo\"] || Dates.fmt(Date.now()),\r\n    },\r\n  ];\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value || null });\r\n  }\r\n\r\n  return (\r\n    <FilterExport\r\n      handleSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(formData);\r\n      }}\r\n      fields={searchFields}\r\n      handleChange={handleChange}\r\n      filterLabel='Refresh'\r\n    />\r\n  );\r\n}\r\n\r\nexport default FilterForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ComplaintsByNatureGraph from \"./dashboard/ComplaintsByNatureGraph\";\r\nimport ComplaintsByStatusGraph from \"./dashboard/ComplaintsByStatusGraph\";\r\nimport ComplaintsByLocationGraph from \"./dashboard/ComplaintsByLocationGraph\";\r\nimport ComplaintsKPIGraph from \"./dashboard/ComplaintsKPIGraph\";\r\nimport FilterForm from \"./dashboard/FilterForm\";\r\n\r\n\r\nfunction HomePage() {\r\n  const [filter, setFilter] = useState(new Map());\r\n  const handleSubmit = (formData) => {\r\n    setFilter({ ...formData })\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"toolbar\">\r\n        {(\r\n          <FilterForm\r\n            handleSubmit={handleSubmit}\r\n            filter={filter} />\r\n        )}\r\n      </div>\r\n      <div className=\"dashboard\">\r\n        <ComplaintsByStatusGraph filter={filter} />\r\n        <ComplaintsByLocationGraph filter={filter} />\r\n        <ComplaintsByNatureGraph filter={filter} />\r\n        <ComplaintsKPIGraph filter={filter} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nfunction Table({ columns, data, idCol = \"id\" }) {\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"table-scrollable\">\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col) => (\r\n              <th key={col.name}>{col.label}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row) => (\r\n            <tr key={row[idCol]}>\r\n              {columns.map((col) => (\r\n                <td key={col.name} className={col.className}>\r\n                  {col.render ? col.render(row) : row[col.name]}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nconst MatIcon = ({ name, extra, text }) => (\r\n  <>\r\n    <span className={`mat-icon material-icons${extra ? \" \" + extra : \"\"}`}>\r\n      {name}\r\n    </span>\r\n    {text && <span>{text}</span>}\r\n  </>\r\n);\r\nexport default MatIcon;\r\n","export const attachmentsChangeHandler = (e, cb) => {\r\n  let files = [];\r\n\r\n  let updateAttachements = (files) => {\r\n    cb(files);\r\n  };\r\n\r\n  let theFiles = e.target.files;\r\n  for (let i = 0; i < theFiles.length; i++) {\r\n    const reader = new FileReader();\r\n    let file = theFiles[i];\r\n    reader.addEventListener(\"load\", () => {\r\n      let data = reader.result;\r\n      files.push({ filename: file.name, data: data });\r\n      if (files.length === theFiles.length) {\r\n        updateAttachements(files);\r\n      }\r\n    });\r\n    reader.readAsDataURL(file);\r\n  }\r\n};\r\n","export const PAGE_SIZE = 10;\r\n\r\nexport const COMPLAINTS_FILTER_VARS = {\r\n  pageSize: PAGE_SIZE,\r\n  pageNo: 1,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../../components/forms/Input\";\r\nimport Select from \"../../components/forms/Select\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  REGISTER_COMPLAINT,\r\n  COMPLAINTS,\r\n  NATURES,\r\n  LOCATIONS,\r\n} from \"../../helpers/GraphQL\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { attachmentsChangeHandler } from \"../../helpers/FileUpload\";\r\nimport { COMPLAINTS_FILTER_VARS } from \"../../constants\";\r\n\r\nfunction NewComplaintRegisterPage({}) {\r\n  let natures = useQuery(NATURES);\r\n  let locations = useQuery(LOCATIONS);\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerComplaint, { loading }] = useMutation(REGISTER_COMPLAINT);\r\n  const natureOptions = natures.data ? natures.data.natures : [];\r\n  const locationOptions = locations.data ? locations.data.locations : [];\r\n  const [attachments, setAttachments] = useState([]);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    registerComplaint({\r\n      variables: {\r\n        ...formData,\r\n        attachments: attachments,\r\n        openDate: `${formData.openDate}T00:00+00:00`,\r\n      },\r\n      refetchQueries: () => [\r\n        { query: COMPLAINTS, variables: COMPLAINTS_FILTER_VARS },\r\n      ],\r\n      awaitRefetchQueries: true,\r\n    }).then(\r\n      () => setRedirect(\"/complaints\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/complaints\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Register New Complaint</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-grid-2\">\r\n          <div>\r\n            <Input\r\n              name=\"clientName\"\r\n              label=\"Client Name\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <Select\r\n              name=\"location\"\r\n              label=\"Location\"\r\n              options={locationOptions}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <Select\r\n              name=\"nature\"\r\n              label=\"Nature\"\r\n              options={natureOptions}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n\r\n            <Input\r\n              name=\"openDate\"\r\n              label=\"Open Date\"\r\n              type=\"date\"\r\n              onChange={handleChange}\r\n              required\r\n              max={new Date().toISOString().split(\"T\")[0]}\r\n            />\r\n          </div>\r\n          <div className=\"register-right\">\r\n            <Input\r\n              name=\"details\"\r\n              label=\"Details\"\r\n              type=\"textarea\"\r\n              onChange={handleChange}\r\n              required\r\n              maxLength=\"300\"\r\n              help=\"Max 300 characters\"\r\n              cls=\"large\"\r\n            />\r\n            <Input\r\n              name=\"attachments\"\r\n              type=\"file\"\r\n              label=\"Attachments\"\r\n              multiple\r\n              onChange={(e) =>\r\n                attachmentsChangeHandler(e, (files) => setAttachments(files))\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewComplaintRegisterPage;\r\n","import React from \"react\";\r\nimport MatIcon from \"../icons/MatIcon\";\r\n\r\nfunction Modal({ onClose, title, children, posx, posy, ...props }) {\r\n  const showHideClassName = \"modal display-block\";\r\n  return (\r\n    <div className={showHideClassName} {...props}>\r\n      <div className=\"modal-main\">\r\n        <div className=\"modal-header\">\r\n          {title ? <h5 className=\"modal-title\">{title}</h5> : <span></span>}\r\n          <div className=\"btn-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn text-warning m-1\"\r\n              onClick={onClose}\r\n            >\r\n              <MatIcon name=\"close\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-content\">{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport Select from \"../../components/forms/Select\";\r\nimport { UPDATE_ASSIGN_COMPLAINT, COMPLAINTS } from \"../../helpers/GraphQL\";\r\nimport { USERS } from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\n\r\nfunction AssignComplaintPopup({ complaint, onComplete }) {\r\n  let users = useQuery(USERS);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [assignTo, { loading }] = useMutation(UPDATE_ASSIGN_COMPLAINT);\r\n  const userOptions = users.data\r\n    ? users.data.users.map((r) => {\r\n        return { ...r, name: r.username };\r\n      })\r\n    : [];\r\n  console.log(complaint);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    assignTo({\r\n      variables: {\r\n        ...formData,\r\n        id: complaint.id,\r\n      },\r\n      refetchQueries: [{ query: COMPLAINTS }],\r\n    }).then(\r\n      () => onComplete(),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return (\r\n    <div>\r\n      <h5>Assign Complaint To User</h5>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Select\r\n            name=\"userId\"\r\n            label=\"Assign To\"\r\n            onChange={handleChange}\r\n            required\r\n            options={userOptions}\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignComplaintPopup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  COMPLAINTS,\r\n  UPDATE_DETAILS_COMPLAINT,\r\n  GET_COMPLAINT,\r\n} from \"../../helpers/GraphQL\";\r\nimport Input from \"../../components/forms/Input\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { Redirect, NavLink } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { withRouter } from \"react-router\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { attachmentsChangeHandler } from \"../../helpers/FileUpload\";\r\n\r\nfunction UpdateComplaintForm({ match }) {\r\n  useProfile();\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [attachments, setAttachments] = useState([]);\r\n\r\n  const { loading, error, data } = useQuery(GET_COMPLAINT, {\r\n    variables: { id: match.params.id },\r\n  });\r\n  const [updateDetails] = useMutation(UPDATE_DETAILS_COMPLAINT);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  let complaint = data.complaint;\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    let prev = new Map();\r\n    Object.keys(complaint).forEach((key) => {\r\n      if (!formData[key]) {\r\n        prev[key] = complaint[key];\r\n      }\r\n    });\r\n\r\n    updateDetails({\r\n      variables: {\r\n        ...formData,\r\n        ...prev,\r\n        attachments: attachments,\r\n        id: complaint.id,\r\n      },\r\n      refetchQueries: [{ query: COMPLAINTS }],\r\n    }).then(\r\n      () => setRedirect(\"/complaints\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  const inputsConf = {\r\n    type: \"textarea\",\r\n    onChange: handleChange,\r\n    required: \"required\",\r\n    maxLength: \"200\",\r\n    help: \"Max 200 characters\",\r\n  };\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div className=\"form-wrap\">\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/complaints\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Fill complain analysis/resolution</h5>\r\n        </div>\r\n      </div>\r\n\r\n      <form className=\"form form-flex v-scroll\" onSubmit={handleSubmit}>\r\n        <div className=\"form-fields\">\r\n          <p>\r\n            <b>Details:</b> {complaint.details}\r\n          </p>\r\n          <Input\r\n            name=\"actionPlan\"\r\n            label=\"Action Plan\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.actionPlan}\r\n          />\r\n          <Input\r\n            name=\"rca\"\r\n            label=\"Root Cause Analysis\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.rca}\r\n          />\r\n          <Input\r\n            name=\"results\"\r\n            label=\"Results\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.results}\r\n            maxLength=\"500\"\r\n            help=\"Max 500 characters\"\r\n            rows=\"4\"\r\n          />\r\n          <Input\r\n            name=\"financialImpact\"\r\n            label=\"Financial Impact\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.financialImpact}\r\n          />\r\n          <Input\r\n            name=\"costCenter\"\r\n            label=\"Cost Center\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.costCenter}\r\n          />\r\n          <Input\r\n            name=\"responsiblePerson\"\r\n            label=\"Responsible Person\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.responsiblePerson}\r\n          />\r\n          <Input\r\n            name=\"attachments\"\r\n            type=\"file\"\r\n            label=\"Attachments\"\r\n            multiple\r\n            onChange={(e) =>\r\n              attachmentsChangeHandler(e, (files) => setAttachments(files))\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(UpdateComplaintForm);\r\n","import React from \"react\";\r\nimport MatIcon from \"../icons/MatIcon\";\r\n\r\nfunction Pagination({ pageNo, onPageChanged, lastPage }) {\r\n  const handlePrev = () => {\r\n    let newPage = pageNo > 1 ? pageNo - 1 : 1;\r\n    if (onPageChanged) {\r\n      onPageChanged(newPage);\r\n    }\r\n  };\r\n  const handleNext = () => {\r\n    let newPage = pageNo + 1;\r\n    if (onPageChanged) {\r\n      onPageChanged(newPage);\r\n    }\r\n  };\r\n  return (\r\n    <ul className=\"pagination\">\r\n      <li className=\"btn-wrap\">\r\n        <button onClick={handlePrev} disabled={pageNo <= 1}>\r\n          <MatIcon name=\"keyboard_arrow_left\" /> Previous\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <span>Page {pageNo}</span>\r\n      </li>\r\n      <li className=\"btn-wrap\">\r\n        <button onClick={handleNext} disabled={lastPage}>\r\n          Next <MatIcon name=\"keyboard_arrow_right\" />\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { SEND_FEEDBACK, COMPLAINTS } from \"../../helpers/GraphQL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Input from \"../../components/forms/Input\";\r\nimport { attachmentsChangeHandler } from \"../../helpers/FileUpload\";\r\n\r\nfunction FeedbackForm({ complaint, img }) {\r\n  const [sendFeedback, {}] = useMutation(SEND_FEEDBACK);\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  const [remarks, setRemarks] = useState(null);\r\n  const [attachments, setAttachments] = useState([]);\r\n\r\n  function sendNow(e) {\r\n    e.preventDefault();\r\n    let params = {\r\n      id: complaint.id,\r\n      attachments: attachments,\r\n      email: email,\r\n      remarks: remarks,\r\n    };\r\n    console.log(params);\r\n    sendFeedback({\r\n      variables: params,\r\n      refetchQueries: [{ query: COMPLAINTS }],\r\n    }).then(\r\n      () => setRedirect(\"/complaints\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <form className=\"form\" onSubmit={sendNow} encType=\"multipart/form-data\">\r\n        <div>\r\n          <Input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            label=\"Customer Email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"remarks\"\r\n            type=\"textarea\"\r\n            label=\"Remarks\"\r\n            onChange={(e) => setRemarks(e.target.value)}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"attachments\"\r\n            type=\"file\"\r\n            label=\"Attachments\"\r\n            multiple\r\n            onChange={(e) =>\r\n              attachmentsChangeHandler(e, (files) => setAttachments(files))\r\n            }\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button className=\"p-1\">Send Feedback</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeedbackForm;\r\n","// Configurations:\r\n// 1. Backend endpoint depending on test vs live\r\n// 2.\r\n\r\nconst ENVIRON = process.env.NODE_ENV === \"development\" ? \"DEV\" : \"PROD\";\r\n\r\nconst CONF = {\r\n  DEV: {\r\n    baseUrl: \"http://localhost:8000/api\",\r\n    ROOT: \"http://localhost:8000\",\r\n  },\r\n  PROD: {\r\n    baseUrl: \"/api\",\r\n    ROOT: \"\",\r\n  },\r\n};\r\n\r\nexport const BASE_URL = CONF[ENVIRON].baseUrl;\r\nexport const ROOT_URL = CONF[ENVIRON].ROOT;\r\nexport const GOOGLE_API_KEY = \"AIzaSyDQ7WXCqy5-cyHTyho_XLgBDHJZe4n-nAw\";\r\n","import React from \"react\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { ROOT_URL } from \"../../conf\";\r\n\r\nfunction Attachment({ doc }) {\r\n  console.log(doc);\r\n  let split = doc.file.split(\"/\");\r\n  let name = split[split.length - 1];\r\n  return (\r\n    <>\r\n      <span className=\"text-ellipsis\">{name}</span>\r\n      <a\r\n        href={`${ROOT_URL}/media/${doc.file}`}\r\n        className=\"borded-link\"\r\n        download\r\n      >\r\n        <MatIcon name=\"arrow_downward\" />\r\n      </a>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Attachment;\r\n","import React from \"react\";\r\nimport { COMPLAINT_ATTACHMENTS } from \"../../helpers/GraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport Attachment from \"./Attachment\";\r\n\r\nfunction ComplaintAttachements({ complaint_id }) {\r\n  const { loading, error, data } = useQuery(COMPLAINT_ATTACHMENTS, {\r\n    variables: { complaint_id: complaint_id },\r\n  });\r\n  if (loading || error) {\r\n    return null;\r\n  }\r\n  const attachments = data.complaintAttachments;\r\n  return (\r\n    <ul className=\"attachments mb-1\">\r\n      <li>\r\n        <b>Attachments</b>\r\n      </li>\r\n      {attachments.length ? (\r\n        attachments.map((doc) => (\r\n          <li key={doc.id}>\r\n            <Attachment doc={doc} />\r\n          </li>\r\n        ))\r\n      ) : (\r\n        <li>None</li>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ComplaintAttachements;\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { GET_COMPLAINT } from \"../../helpers/GraphQL\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { useRef } from \"react\";\r\nimport Modal from \"../../components/modals/Modal\";\r\nimport FeedbackForm from \"./FeedbackForm\";\r\nimport ComplaintAttachements from \"./ComplaintAttachements\";\r\nlet dayjs = require(\"dayjs\");\r\nlet html2canvas = require(\"html2canvas\");\r\n\r\nfunction ComplaintDetailViewPage({ match }) {\r\n  useProfile();\r\n  const detailsView = useRef(null);\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [img, setImg] = useState(null);\r\n  const { loading, error, data } = useQuery(GET_COMPLAINT, {\r\n    variables: { id: match.params.id },\r\n  });\r\n\r\n  error && console.error(error);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  let complaint = data.complaint;\r\n  function calc_kpi_days(open, close) {\r\n    console.log(`Open: ${open}`, `Close: ${close}`);\r\n    if (!close) {\r\n      close = dayjs().format(\"YYYY-MM-DD\");\r\n    }\r\n    if (open.indexOf(\"T\")) open = open.split(\"T\")[0];\r\n    if (close.indexOf(\"T\")) close = close.split(\"T\")[0];\r\n    console.log(`Open: ${open}`, `Close: ${close}`);\r\n    return dayjs(close).diff(dayjs(open), \"day\");\r\n  }\r\n  function detailsImage(e) {\r\n    let btn = e.target;\r\n    console.log(btn);\r\n    html2canvas(detailsView.current, { scrollY: -window.scrollY }).then(\r\n      (canvas) => {\r\n        // document.body.appendChild(canvas);\r\n        console.log(canvas);\r\n        let dt = canvas.toDataURL(\"image/png\");\r\n        // downloadURI(dt, \"test.png\");\r\n        setImg(dt);\r\n        setFeedback(true);\r\n      }\r\n    );\r\n  }\r\n  const {\r\n    id,\r\n    clientName,\r\n    location,\r\n    nature,\r\n    openDate,\r\n    details,\r\n    actionPlan,\r\n    closeDate,\r\n    costCenter,\r\n    financialImpact,\r\n    rca,\r\n    responsiblePerson,\r\n    results,\r\n    status,\r\n    assignedTo,\r\n    assignedAt,\r\n    closedBy,\r\n  } = complaint;\r\n  const fmtDate = (strDate) => {\r\n    if (strDate) {\r\n      if (strDate.indexOf(\"T\")) strDate = strDate.split(\"T\")[0];\r\n      return dayjs(strDate).format(\"DD/MM/YYYY\");\r\n    }\r\n    return null;\r\n  };\r\n  return (\r\n    <div className=\"details\">\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/complaints\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Complete Complaint Information</h5>\r\n        </div>\r\n      </div>\r\n      <div className=\"details-grid\" ref={detailsView}>\r\n        <div className=\"grid-form-details\">\r\n          <div>\r\n            <label>Client Name</label>\r\n            <p>{clientName}</p>\r\n          </div>\r\n          <div>\r\n            <label>Location</label>\r\n            <p>{location.name}</p>\r\n          </div>\r\n          <div>\r\n            <label>Nature</label>\r\n            <p>{nature.name}</p>\r\n          </div>\r\n          <div>\r\n            <label>Open Date</label>\r\n            <p>{fmtDate(openDate)}</p>\r\n          </div>\r\n          <div className=\"span\">\r\n            <label>Details</label>\r\n            <p>{details}</p>\r\n          </div>\r\n          <div>\r\n            <label>Action Plan</label>\r\n            <p>{actionPlan}</p>\r\n          </div>\r\n          <div>\r\n            <label>Root Cause Analysis</label>\r\n            <p>{rca}</p>\r\n          </div>\r\n          <div className=\"span\">\r\n            <label>Results</label>\r\n            <p>{results}</p>\r\n          </div>\r\n          <div className=\"span\">\r\n            <label>Financial Impact</label>\r\n            <p>{financialImpact}</p>\r\n          </div>\r\n          <div>\r\n            <label>Cost Center</label>\r\n            <p>{costCenter}</p>\r\n          </div>\r\n          <div>\r\n            <label>Responsible Person</label>\r\n            <p>{responsiblePerson}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"sidebar mt-1 bg-light\">\r\n          <div className=\"status\">\r\n            <label>\r\n              Status: <span>{status}</span>\r\n            </label>\r\n          </div>\r\n          <ul>\r\n            {openDate && (\r\n              <li>\r\n                <MatIcon name=\"done\" />\r\n                On {fmtDate(openDate)}, Created\r\n              </li>\r\n            )}\r\n            {assignedTo && (\r\n              <li>\r\n                <MatIcon name=\"done\" />\r\n                On {fmtDate(assignedAt)}, Assigned to {assignedTo.username}\r\n              </li>\r\n            )}\r\n            {closedBy && (\r\n              <li>\r\n                <MatIcon name=\"done\" />\r\n                On {fmtDate(closeDate)}, Closed by {closedBy.username}\r\n              </li>\r\n            )}\r\n            <li className=\"kpi\">\r\n              KPI:\r\n              <span className=\"ml-1\">\r\n                <b>{calc_kpi_days(openDate, closeDate)}</b> day(s)\r\n              </span>\r\n            </li>\r\n          </ul>\r\n          <ComplaintAttachements complaint_id={id} />\r\n          {status === \"COMPLETED\" && (\r\n            <button className=\"send-feedback btn ripple\" onClick={detailsImage}>\r\n              <MatIcon name=\"mail_outline\" text=\"Send Feedback To Customer\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {feedback && (\r\n        <Modal\r\n          title={`Feedback To: ${complaint.clientName}`}\r\n          onClose={() => setFeedback(false)}\r\n        >\r\n          <FeedbackForm\r\n            complaint={complaint}\r\n            img={img}\r\n            onComplete={() => setFeedback(false)}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ComplaintDetailViewPage);\r\n","import React, { useState } from \"react\";\r\nimport { NATURES, LOCATIONS, GET_STATUSES } from \"../../helpers/GraphQL\";\r\nimport FilterExport from \"../../components/forms/FilterExport\";\r\nimport { Dates } from \"../../helpers/Dates\";\r\n\r\nfunction FilterForm({ handleSubmit, handleExport, filter = {} }) {\r\n  console.log(filter);\r\n  const [formData, setFormData] = useState(filter);\r\n  const searchFields = [\r\n    { name: \"clientName\", label: \"Client Name\" },\r\n    {\r\n      name: \"location\",\r\n      label: \"Location\",\r\n      type: \"select\",\r\n      query: { name: LOCATIONS, data: \"locations\" },\r\n      defaultValue: filter[\"location\"],\r\n    },\r\n    {\r\n      name: \"nature\",\r\n      label: \"Nature\",\r\n      type: \"select\",\r\n      query: { name: NATURES, data: \"natures\" },\r\n      defaultValue: filter[\"nature\"],\r\n    },\r\n    {\r\n      name: \"status\",\r\n      label: \"Status\",\r\n      type: \"select\",\r\n      query: { name: GET_STATUSES, data: \"statuses\" },\r\n      defaultValue: filter[\"status\"],\r\n    },\r\n    {\r\n      name: \"dateFrom\",\r\n      label: \"From\",\r\n      type: \"date\",\r\n      defaultValue: filter[\"dateFrom\"] || Dates.fmt(Date.now()),\r\n    },\r\n    {\r\n      name: \"dateTo\",\r\n      label: \"To\",\r\n      type: \"date\",\r\n      defaultValue: filter[\"dateTo\"] || Dates.fmt(Date.now()),\r\n    },\r\n  ];\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value || null });\r\n  }\r\n\r\n  return (\r\n    <FilterExport\r\n      handleSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(formData);\r\n      }}\r\n      fields={searchFields}\r\n      handleChange={handleChange}\r\n      handleExport={(e) => {\r\n        e.preventDefault();\r\n        handleExport(formData);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FilterForm;\r\n","import React, { useState } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { Route, NavLink } from \"react-router-dom\";\r\n\r\nimport Table from \"../components/tables/Table\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport { COMPLAINTS } from \"../helpers/GraphQL\";\r\nimport NewComplaintRegisterPage from \"./complaints/NewComplaintRegisterPage\";\r\nimport Modal from \"../components/modals/Modal\";\r\nimport AssignComplaintPopup from \"./complaints/AssignComplaintPopup\";\r\nimport UpdateComplaintForm from \"./complaints/UpdateComplaintForm\";\r\nimport useProfile from \"../components/hooks/useProfile\";\r\nimport Pagination from \"../components/tables/Pagination\";\r\nimport { useEffect } from \"react\";\r\nimport ComplaintDetailViewPage from \"./complaints/ComplaintDetailViewPage\";\r\nimport FilterForm from \"./complaints/FilterForm\";\r\nimport { BASE_URL } from \"../conf\";\r\nconst PAGE_SIZE = 10;\r\nfunction ComplaintsPage() {\r\n  useProfile();\r\n  const [pageNo, setPageNo] = useState(1);\r\n  const [filter, setFilter] = useState(new Map());\r\n  const [getComplaints, { loading, data, error }] = useLazyQuery(COMPLAINTS, {\r\n    variables: { pageSize: PAGE_SIZE, pageNo: pageNo, ...filter },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const abortCtrl = new AbortController();\r\n    console.log(\"Start\");\r\n    getComplaints();\r\n\r\n    return function cleanup() {\r\n      abortCtrl.abort();\r\n    };\r\n  }, [pageNo, filter]);\r\n\r\n  function handleSubmit(formData) {\r\n    console.log(formData);\r\n    let params = new Map();\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value) {\r\n        params[key] = value;\r\n      }\r\n    }\r\n    console.log(\"Params: \", params);\r\n    setFilter(params);\r\n    setPageNo(1);\r\n  }\r\n\r\n  function handleExport(formData) {\r\n    let params = new Map();\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value) {\r\n        params[key] = value;\r\n      }\r\n    }\r\n    let q = Object.keys(params)\r\n      .map((key) => key + \"=\" + params[key])\r\n      .join(\"&\");\r\n    fetch(`${BASE_URL}/export-complaints?${q}`)\r\n      .then((response) => response.blob())\r\n      .then((blob) => {\r\n        var url = window.URL.createObjectURL(blob);\r\n        var a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = \"Export.xlsx\";\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        a.remove();\r\n      });\r\n  }\r\n\r\n  function handlePageChange(newPageNo) {\r\n    setPageNo(newPageNo);\r\n  }\r\n\r\n  const [assign, setAssign] = useState(false);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  const columns = [\r\n    { name: \"id\", label: \"ID\" },\r\n    { name: \"clientName\", label: \"Client Name\" },\r\n    { name: \"location_name\", label: \"Location\" },\r\n    { name: \"openDate\", label: \"Open Date\" },\r\n    { name: \"nature_name\", label: \"Nature of Complaint\" },\r\n    { name: \"status\", label: \"Status\" },\r\n    {\r\n      name: \"assigned_to\",\r\n      label: \"Assigned To\",\r\n      render: (row) =>\r\n        row.assignedTo ? (\r\n          <span>{row.assignedTo.username}</span>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              setAssign(true);\r\n              setSelected(row);\r\n            }}\r\n          >\r\n            Assign\r\n          </button>\r\n        ),\r\n    },\r\n    { name: \"details\", label: \"Details\", className: \"col-ellipsis\" },\r\n    {\r\n      name: \"updateDetails\",\r\n      label: \"\",\r\n      render: (row) =>\r\n        row.status === \"ASSIGNED\" ? (\r\n          <NavLink\r\n            className=\"btn btn-light p-1 d-flex align-left\"\r\n            to={`/complaints/update/${row.id}`}\r\n          >\r\n            <MatIcon name=\"settings\" text=\"Complete\" />\r\n          </NavLink>\r\n        ) : null,\r\n    },\r\n    {\r\n      name: \"viewDetails\",\r\n      render: (row) => (\r\n        <NavLink to={`/complaints/view/${row.id}`} className=\"d-flex\">\r\n          <MatIcon name=\"unfold_more\" />\r\n        </NavLink>\r\n      ),\r\n    },\r\n  ];\r\n  const fmtDate = (strDate) => {\r\n    let parsed = Date.parse(strDate);\r\n    return new Date(parsed).toLocaleDateString(\"en-GB\");\r\n  };\r\n  const records = data\r\n    ? data.complaints.map((r) => ({\r\n        ...r,\r\n        nature_name: r.nature.name,\r\n        location_name: r.location ? r.location.name : \"\",\r\n        openDate: fmtDate(r.openDate),\r\n      }))\r\n    : [];\r\n  return (\r\n    <>\r\n      <Route path=\"/complaints\" exact>\r\n        <div className=\"toolbar\">\r\n          <h5>List of complaints</h5>\r\n          <NavLink\r\n            className=\"d-flex btn has-left-icon\"\r\n            to=\"/complaints/new-complaint\"\r\n          >\r\n            <MatIcon name=\"add\" text=\"New Complaint\" />\r\n          </NavLink>\r\n        </div>\r\n        <hr />\r\n        <div className=\"toolbar\">\r\n          {data && (\r\n            <FilterForm\r\n              handleSubmit={handleSubmit}\r\n              filter={filter}\r\n              handleExport={handleExport}\r\n            />\r\n          )}\r\n        </div>\r\n        <Table columns={columns} data={records} />\r\n        {data && (\r\n          <Pagination\r\n            pageNo={pageNo}\r\n            onPageChanged={handlePageChange}\r\n            lastPage={data.complaints.length < PAGE_SIZE}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/complaints/new-complaint\" exact>\r\n        <NewComplaintRegisterPage />\r\n      </Route>\r\n      <Route path=\"/complaints/update/:id\" exact>\r\n        <UpdateComplaintForm />\r\n      </Route>\r\n      <Route path=\"/complaints/view/:id\" exact>\r\n        <ComplaintDetailViewPage />\r\n      </Route>\r\n      {assign && (\r\n        <Modal title={selected.clientName} onClose={() => setAssign(false)}>\r\n          <AssignComplaintPopup\r\n            complaint={selected}\r\n            onComplete={() => setAssign(false)}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ComplaintsPage;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { REGISTER_USER, USERS, USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport Input from \"../../components/forms/Input\";\r\n\r\nfunction NewUserPage() {\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerUser, { loading }] = useMutation(REGISTER_USER);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    registerUser({\r\n      variables: {\r\n        ...formData,\r\n      },\r\n      refetchQueries: [{ query: USERS }, { query: USERS_GET_ME }],\r\n    }).then(\r\n      () => setRedirect(\"/users\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/users\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Register New User</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form form-medium\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            required\r\n          />\r\n          <Input\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewUserPage;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect, withRouter } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport {\r\n  REGISTER_USER,\r\n  USERS,\r\n  USERS_GET_ME,\r\n  GET_USER,\r\n} from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport Input from \"../../components/forms/Input\";\r\n\r\nfunction UpdateUserPage({ match }) {\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerUser, {}] = useMutation(REGISTER_USER);\r\n  const { loading, error, data } = useQuery(GET_USER, {\r\n    variables: { id: match.params.id },\r\n  });\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  let user = data.user;\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    let prev = new Map();\r\n    Object.keys(user).forEach((key) => {\r\n      if (!formData[key]) {\r\n        prev[key] = user[key];\r\n      }\r\n    });\r\n\r\n    registerUser({\r\n      variables: { ...formData, ...prev, id: user.id },\r\n      refetchQueries: [{ query: USERS }, { query: USERS_GET_ME }],\r\n    }).then(\r\n      () => setRedirect(\"/users\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/users\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Update User</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form form-medium\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.username}\r\n            readOnly={true}\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            required\r\n            defaultValue={user.email}\r\n          />\r\n          <Input\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.firstName}\r\n          />\r\n          <Input\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.lastName}\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(UpdateUserPage);\r\n","import React from \"react\";\r\nimport { USERS } from \"../helpers/UsersGraphQL\";\r\nimport NewUserPage from \"./users/NewUserPage\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Route, NavLink, useHistory } from \"react-router-dom\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport Table from \"../components/tables/Table\";\r\nimport useProfile from \"../components/hooks/useProfile\";\r\nimport UpdateUserPage from \"./users/UpdateUserPage\";\r\n\r\nfunction UserManagementPage(props) {\r\n  useProfile();\r\n  const { loading, error, data } = useQuery(USERS);\r\n  if (loading) return null;\r\n  if (error) {\r\n    return <p>Error (:</p>;\r\n  }\r\n  const columns = [\r\n    { name: \"id\", label: \"ID\" },\r\n    { name: \"username\", label: \"Client Name\" },\r\n    { name: \"email\", label: \"Email\" },\r\n    { name: \"name\", label: \"Full Name\" },\r\n    {\r\n      name: \"actions\",\r\n      label: \"\",\r\n      render: (row) => (\r\n        <div>\r\n          <a href={`/users/update/${row.id}`} className=\"d-flex align-left\">\r\n            <MatIcon name=\"edit\" text=\"Edit\" />\r\n          </a>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const records = data.users.map((r) => ({\r\n    ...r,\r\n    name: r.firstName ? `${r.firstName} ${r.lastName}` : null,\r\n  }));\r\n  return (\r\n    <>\r\n      <Route path=\"/users\" exact>\r\n        <div className=\"toolbar\">\r\n          <h5>List of users</h5>\r\n          <NavLink\r\n            className=\"d-flex btn btn-light has-left-icon\"\r\n            to=\"/users/new-user\"\r\n          >\r\n            <MatIcon name=\"add\" text=\"New User\" />\r\n          </NavLink>\r\n        </div>\r\n        <Table columns={columns} data={records} />\r\n      </Route>\r\n      <Route path=\"/users/new-user\" exact>\r\n        <NewUserPage />\r\n      </Route>\r\n      <Route path=\"/users/update/:id\" exact>\r\n        <UpdateUserPage />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserManagementPage;\r\n","const ACCESS_TOKEN = \"AccessToken\";\r\n\r\nconst AuthHelper = {\r\n  saveToken: (token, cb) => {\r\n    sessionStorage.setItem(ACCESS_TOKEN, token);\r\n    cb(true);\r\n  },\r\n  getToken: () => sessionStorage.getItem(ACCESS_TOKEN),\r\n  removeToken: () => sessionStorage.removeItem(ACCESS_TOKEN),\r\n};\r\n\r\nexport default AuthHelper;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../components/forms/Input\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport AuthHelper from \"../helpers/AuthHelper\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_TOKEN, USERS_GET_ME } from \"../helpers/UsersGraphQL\";\r\nimport { COMPLAINTS } from \"../helpers/GraphQL\";\r\n\r\nfunction LoginPage(props) {\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [login, { loading, client }] = useMutation(USERS_GET_TOKEN);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    client.clearStore();\r\n    login({\r\n      variables: {\r\n        ...formData,\r\n      },\r\n    }).then(\r\n      (res) => {\r\n        if (res.data) {\r\n          let { token } = res.data.tokenAuth;\r\n          AuthHelper.saveToken(token, () => {\r\n            setRedirect(\"/\");\r\n          });\r\n        }\r\n      },\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <>\r\n      <div className=\"login-page box-shadow\">\r\n        <div className=\"login-header d-flex mb-1 p-1\">\r\n          <h3>Twiga - CCMS</h3>\r\n          <img\r\n            src={\r\n              process.env.PUBLIC_URL + \"/static/images/complaints_register.png\"\r\n            }\r\n            alt=\"Image\"\r\n          />\r\n        </div>\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n          <div className=\"mt-1\">\r\n            <Input\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-footer\">\r\n            <button>\r\n              <span className=\"mr-1\">Login</span>\r\n              <MatIcon name=\"login\" />\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport NavBar from \"./components/nav/NavBar\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport ComplaintsPage from \"./pages/ComplaintsPage\";\r\nimport UserManagementPage from \"./pages/UserManagementPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport AuthHelper from \"./helpers/AuthHelper\";\r\nimport { BASE_URL } from \"./conf\";\r\nconst getToken = () => {\r\n  const token = AuthHelper.getToken();\r\n  return token ? `JWT ${token}` : \"\";\r\n};\r\nconst requestMiddleware = (operation) => {\r\n  operation.setContext({\r\n    headers: {\r\n      Authorization: getToken(),\r\n    },\r\n  });\r\n};\r\nconst client = new ApolloClient({\r\n  uri: `${BASE_URL}/graphql`,\r\n  request: requestMiddleware,\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <ApolloProvider client={client}>\r\n        <Switch>\r\n          <Route path=\"/login\" exact>\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <NavBar />\r\n            <section className=\"page-content container\">\r\n              <div className=\"content\">\r\n                <Switch>\r\n                  <Route path=\"/\" exact>\r\n                    <HomePage />\r\n                  </Route>\r\n                  <Route path=\"/complaints\">\r\n                    <ComplaintsPage />\r\n                  </Route>\r\n                  <Route path=\"/users\">\r\n                    <UserManagementPage />\r\n                  </Route>\r\n                </Switch>\r\n              </div>\r\n            </section>\r\n          </Route>\r\n        </Switch>\r\n      </ApolloProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}