{"version":3,"sources":["helpers/UsersGraphQL.js","components/nav/UserProfile.js","components/hooks/useProfile.js","components/nav/NavBar.js","helpers/ReportsGraphQL.js","components/graph/BarGraph.js","helpers/ColorsHelper.js","pages/dashboard/ComplaintsByNatureGraph.js","components/graph/PieChart.js","pages/dashboard/ComplaintsByStatusGraph.js","pages/dashboard/ComplaintsByLocationGraph.js","pages/dashboard/ComplaintsKPIGraph.js","pages/HomePage.js","components/tables/Table.js","components/icons/MatIcon.js","helpers/GraphQL.js","components/forms/Input.js","components/forms/Select.js","helpers/FileUpload.js","constants.js","pages/complaints/NewComplaintRegisterPage.js","components/modals/Modal.js","pages/complaints/AssignComplaintPopup.js","pages/complaints/UpdateComplaintForm.js","components/tables/Pagination.js","pages/complaints/FeedbackForm.js","conf.js","pages/complaints/Attachment.js","pages/complaints/ComplaintAttachements.js","pages/complaints/ComplaintDetailViewPage.js","components/forms/FilterExport.js","pages/complaints/FilterForm.js","pages/ComplaintsPage.js","pages/users/NewUserPage.js","pages/users/UpdateUserPage.js","pages/UserManagementPage.js","helpers/AuthHelper.js","pages/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["USERS_GET_TOKEN","gql","USERS_GET_ME","USERS","REGISTER_USER","GET_USER","UserProfile","props","useQuery","loading","error","data","console","log","className","me","username","exact","to","useProfile","history","useHistory","graphQLErrors","length","message","push","NavBar","user","isSuperuser","NATURE_SUMMARY","STATUS_SUMMARY","LOCATION_SUMMARY","KPI_SUMMARY","BarGraph","graphId","meta","title","extra","type","stacked","useEffect","datasets","labels","options","legend","display","window","screen","width","position","plugins","datalabels","hover","mode","intersect","tooltips","displayColors","callbacks","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","callback","value","toLocaleString","userCallback","label","index","Math","floor","Chart","document","getElementById","id","style","ColorsHelper","randomColor","color","i","random","randomColors","num","Array","keys","map","contrastColors","colors","c","invert","ComplaintsByNatureGraph","natureSummary","natureList","d","name","filter","v","a","indexOf","count","s","backgroundColor","p","x","find","status","r","PieChart","onDataClick","bgColors","formatter","ctx","sum","chart","toFixed","onClick","_","els","slice","_index","myPieChart","ComplaintsByStatusGraph","statusSummary","ComplaintsByLocationGraph","locationSummary","locName","locCount","ComplaintsKPIGraph","placeHolder","kpiSummary","natureName","nat","HomePage","Table","columns","idCol","col","key","row","render","MatIcon","text","COMPLAINTS","GET_COMPLAINT","NATURES","COMPLAINT_ATTACHMENTS","LOCATIONS","REGISTER_COMPLAINT","UPDATE_ASSIGN_COMPLAINT","UPDATE_DETAILS_COMPLAINT","SEND_FEEDBACK","GET_STATUSES","Input","help","cls","htmlFor","Select","query","skip","o","attachmentsChangeHandler","e","cb","files","theFiles","target","reader","FileReader","file","addEventListener","result","filename","updateAttachements","readAsDataURL","COMPLAINTS_FILTER_VARS","pageSize","pageNo","NewComplaintRegisterPage","natures","locations","useState","redirect","setRedirect","Map","formData","setFormData","useMutation","registerComplaint","natureOptions","locationOptions","attachments","setAttachments","handleChange","onSubmit","preventDefault","variables","openDate","refetchQueries","awaitRefetchQueries","then","res","onChange","required","max","Date","toISOString","split","maxLength","multiple","Modal","onClose","children","posx","posy","AssignComplaintPopup","complaint","onComplete","users","assignTo","userOptions","withRouter","match","params","updateDetails","inputsConf","prev","Object","forEach","details","defaultValue","actionPlan","rca","results","rows","financialImpact","costCenter","responsiblePerson","Pagination","onPageChanged","lastPage","disabled","FeedbackForm","img","sendFeedback","email","setEmail","remarks","setRemarks","encType","CONF","DEV","baseUrl","ROOT","PROD","BASE_URL","ROOT_URL","Attachment","doc","href","download","ComplaintAttachements","complaint_id","complaintAttachments","dayjs","require","html2canvas","detailsView","useRef","feedback","setFeedback","setImg","open","close","clientName","location","nature","closeDate","assignedTo","assignedAt","closedBy","fmtDate","strDate","format","ref","diff","btn","current","scrollY","canvas","dt","toDataURL","FilterExport","fields","handleSubmit","handleExport","f","FilterForm","searchFields","ComplaintsPage","setPageNo","setFilter","useLazyQuery","getComplaints","abortCtrl","AbortController","abort","assign","setAssign","selected","setSelected","parsed","parse","toLocaleDateString","records","complaints","nature_name","location_name","path","entries","q","join","fetch","response","blob","url","URL","createObjectURL","createElement","body","appendChild","click","remove","newPageNo","NewUserPage","registerUser","readOnly","firstName","lastName","UserManagementPage","AuthHelper","saveToken","token","sessionStorage","setItem","getToken","getItem","removeToken","removeItem","LoginPage","login","client","src","alt","clearStore","tokenAuth","ApolloClient","uri","request","operation","setContext","headers","Authorization","App","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.45bdf223.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\r\nexport const USERS_GET_TOKEN = gql`\r\n  mutation getToken($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERS_GET_ME = gql`\r\n  query getMe {\r\n    me {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERS = gql`\r\n  query getUsers {\r\n    users {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_USER = gql`\r\n  mutation registerUser(\r\n    $id: ID\r\n    $username: String!\r\n    $email: String!\r\n    $firstName: String\r\n    $lastName: String\r\n  ) {\r\n    registerUser(\r\n      id: $id\r\n      username: $username\r\n      email: $email\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n    ) {\r\n      user {\r\n        id\r\n        username\r\n        dateJoined\r\n        firstName\r\n        lastName\r\n        lastLogin\r\n        email\r\n        isStaff\r\n        isSuperuser\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER = gql`\r\n  query getUser($id: ID!) {\r\n    user(id: $id) {\r\n      id\r\n      username\r\n      dateJoined\r\n      firstName\r\n      lastName\r\n      lastLogin\r\n      email\r\n      isStaff\r\n      isSuperuser\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction UserProfile(props) {\r\n  let { loading, error, data } = useQuery(USERS_GET_ME);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  console.log(data);\r\n  return (\r\n    <div className=\"user-profile-nav\">\r\n      <ul>\r\n        <li>\r\n          <b>{data.me.username}</b>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/login\">\r\n            Logout\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction useProfile() {\r\n  const history = useHistory();\r\n  const { loading, error, data } = useQuery(USERS_GET_ME);\r\n  if (loading) return null;\r\n  if (error) {\r\n    if (error.graphQLErrors.length) {\r\n      let message = error.graphQLErrors[0].message;\r\n      if (\r\n        message === \"Signature has expired\" ||\r\n        message === \"You do not have permission to perform this action\"\r\n      ) {\r\n        history.push(\"/login\");\r\n      }\r\n    }\r\n    console.log(error);\r\n    return null;\r\n  }\r\n  return data;\r\n}\r\n\r\nexport default useProfile;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport useProfile from \"../hooks/useProfile\";\r\n\r\nfunction NavBar() {\r\n  const user = useProfile();\r\n  console.log(user);\r\n  return (\r\n    <header className=\"navbar container\">\r\n      <div className=\"content\">\r\n        <h3>Twiga - CCMS</h3>\r\n        <div className=\"nav-links\">\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to=\"/\">\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/complaints\">Complaints</NavLink>\r\n            </li>\r\n            {user && user.me && user.me.isSuperuser && (\r\n              <li>\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n              </li>\r\n            )}\r\n          </ul>\r\n          <UserProfile />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const NATURE_SUMMARY = gql`\r\n  query natureSummary {\r\n    natureSummary {\r\n      name\r\n      status\r\n      count\r\n    }\r\n  }\r\n`;\r\n\r\nexport const STATUS_SUMMARY = gql`\r\n  query statusSummary {\r\n    statusSummary {\r\n      name\r\n      count\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOCATION_SUMMARY = gql`\r\n  query getLocSummary {\r\n    locationSummary {\r\n      locName\r\n      locCount\r\n    }\r\n  }\r\n`;\r\n\r\nexport const KPI_SUMMARY = gql`\r\n  query kpi {\r\n    kpiSummary {\r\n      name\r\n      count\r\n      natureName\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport Numbers from \"../../helpers/Numbers\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst BarGraph = ({\r\n  graphId,\r\n  meta,\r\n  title,\r\n  extra = null,\r\n  type = \"bar\",\r\n  stacked = false,\r\n}) => {\r\n  useEffect(() => {\r\n    const data = {\r\n      datasets: meta.data,\r\n      labels: meta.labels,\r\n    };\r\n    console.log(data);\r\n    const options = {\r\n      legend: {\r\n        display: window.screen.width > 800,\r\n        position: \"top\",\r\n      },\r\n      plugins: {\r\n        datalabels: {\r\n          display: false,\r\n        },\r\n      },\r\n      hover: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n      },\r\n      tooltips: {\r\n        displayColors: true,\r\n        callbacks: {\r\n          mode: \"x\",\r\n        },\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            stacked: stacked,\r\n            gridLines: {\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            stacked: stacked,\r\n            ticks: {\r\n              beginAtZero: meta.beginAtZero || false,\r\n              callback: function (value) {\r\n                return value.toLocaleString();\r\n              },\r\n              userCallback: function (label, index, labels) {\r\n                if (Math.floor(label) === label) {\r\n                  return label;\r\n                }\r\n              },\r\n            },\r\n            type: \"linear\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    new Chart(document.getElementById(graphId), {\r\n      type: type,\r\n      data: data,\r\n      options: options,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`graph-container bg-white card ${extra ? extra : \"\"}`}>\r\n      <h6 className=\"pl-1\">{title}</h6>\r\n      <div>\r\n        <canvas id={graphId} className=\"graph p-1\" style={{}}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n","import invert from \"invert-color\";\r\nexport const ColorsHelper = {\r\n  randomColor() {\r\n    var letters = \"0123456789ABCDEF\";\r\n    var color = \"#\";\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  },\r\n  randomColors(num) {\r\n    return [...Array(num).keys()].map(() => this.randomColor());\r\n  },\r\n  contrastColors(colors) {\r\n    return colors.map(c => invert(c));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { NATURE_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport BarGraph from \"../../components/graph/BarGraph\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\n\r\nfunction ComplaintsByNatureGraph(props) {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(NATURE_SUMMARY);\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  console.log(data);\r\n\r\n  let placeHolder = [\r\n    { name: \"Not Assigned\", count: 0 },\r\n    { name: \"Assigned\", count: 0 },\r\n    { name: \"Completed\", count: 0 },\r\n    { name: \"Feedback Sent\", count: 0 },\r\n  ];\r\n  console.log(data.natureSummary);\r\n\r\n  let natureList = data.natureSummary\r\n    .map((d) => {\r\n      return d.name;\r\n    })\r\n    .filter((v, i, a) => a.indexOf(v) === i);\r\n  let res = placeHolder.map((s) => {\r\n    return {\r\n      label: s.name,\r\n      backgroundColor: ColorsHelper.randomColor(),\r\n      data: natureList.map((p) => {\r\n        let x = data.natureSummary.find(\r\n          (d) => d.name === p && d.status === s.name\r\n        );\r\n        return x ? x.count : 0;\r\n      }),\r\n    };\r\n  });\r\n\r\n  const meta = {\r\n    data: res,\r\n    labels: natureList.map((r) => r),\r\n    beginAtZero: true,\r\n  };\r\n  return (\r\n    <BarGraph\r\n      stacked={true}\r\n      meta={meta}\r\n      title=\"Complaints Nature Summary\"\r\n      graphId=\"complaints-nature-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComplaintsByNatureGraph;\r\n","import React from \"react\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\nimport Chart from \"chart.js\";\r\nimport { useEffect } from \"react\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\n\r\nconst PieChart = ({ meta, graphId, title, colors, onDataClick }) => {\r\n  useEffect(() => {\r\n    let bgColors = colors || ColorsHelper.randomColors(meta.data.length);\r\n    let fntColors = ColorsHelper.contrastColors(bgColors);\r\n    let options = {\r\n      legend: {\r\n        position: \"right\",\r\n      },\r\n      plugins: {\r\n        datalabels: {\r\n          formatter: (value, ctx) => {\r\n            let sum = 0;\r\n            let dataArr = ctx.chart.data.datasets[0].data;\r\n            dataArr.map((data) => {\r\n              sum += data;\r\n            });\r\n            let percentage = ((value * 100) / sum).toFixed(0) + \"%\";\r\n            return percentage;\r\n          },\r\n          color: fntColors,\r\n        },\r\n      },\r\n      onClick: (_, els) => {\r\n        if (els && els.length && onDataClick) {\r\n          let data = meta.data.slice(els[0]._index, els[0]._index + 1)[0];\r\n          onDataClick(data);\r\n        }\r\n      },\r\n    };\r\n    let data = {\r\n      datasets: [\r\n        {\r\n          data: meta.data.map((d) => d.value),\r\n          backgroundColor: bgColors,\r\n        },\r\n      ],\r\n      labels: meta.data.map((d) => d.name),\r\n    };\r\n\r\n    var myPieChart = new Chart(document.getElementById(graphId), {\r\n      type: \"pie\",\r\n      data: data,\r\n      options: options,\r\n    });\r\n    console.log(myPieChart);\r\n  }, []);\r\n  return (\r\n    <div className=\"graph-container bg-white card p-2\">\r\n      <h6 className=\"pl-1\">{title}</h6>\r\n      <div>\r\n        <canvas id={graphId} className=\"graph p-1\" style={{}}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React from \"react\";\r\nimport { STATUS_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport PieChart from \"../../components/graph/PieChart\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\n\r\nfunction ComplaintsByStatusGraph() {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(STATUS_SUMMARY);\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  console.log(data);\r\n  const meta = {\r\n    data: data.statusSummary.map((r) => {\r\n      return {\r\n        name: r.name,\r\n        value: r.count,\r\n      };\r\n    }),\r\n  };\r\n  return (\r\n    <PieChart\r\n      meta={meta}\r\n      title=\"Complaints Status Summary\"\r\n      graphId=\"complaints-status-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComplaintsByStatusGraph;\r\n","import React from \"react\";\r\nimport { LOCATION_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport PieChart from \"../../components/graph/PieChart\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\n\r\nfunction ComplaintsByLocationGraph() {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(LOCATION_SUMMARY);\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  const meta = {\r\n    data: data.locationSummary.map((r) => {\r\n      return {\r\n        name: r.locName,\r\n        value: r.locCount,\r\n      };\r\n    }),\r\n  };\r\n  return (\r\n    <PieChart\r\n      meta={meta}\r\n      title=\"Complaints Location Summary\"\r\n      graphId=\"complaints-location-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComplaintsByLocationGraph;\r\n","import React from \"react\";\r\nimport { KPI_SUMMARY } from \"../../helpers/ReportsGraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport PieChart from \"../../components/graph/PieChart\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport BarGraph from \"../../components/graph/BarGraph\";\r\nimport { ColorsHelper } from \"../../helpers/ColorsHelper\";\r\n\r\nfunction ComplaintsKPIGraph() {\r\n  useProfile();\r\n  const { loading, data, error } = useQuery(KPI_SUMMARY);\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  console.log(data);\r\n  let allProps = {\r\n    backgroundColor: \"rgba(255, 212, 0, .5)\",\r\n    borderWidth: 1,\r\n  };\r\n  let placeHolder = [\r\n    { name: \"1 week\", count: 0 },\r\n    { name: \"2 weeks\", count: 0 },\r\n    { name: \"3-4 weeks\", count: 0 },\r\n    { name: \"5-6 weeks\", count: 0 },\r\n    { name: \"7-8 weeks\", count: 0 },\r\n    { name: \"Above 8 weeks\", count: 0 },\r\n  ];\r\n  console.log(data.kpiSummary);\r\n\r\n  let natureList = data.kpiSummary\r\n    .map((d) => d.natureName)\r\n    .filter((v, i, a) => a.indexOf(v) === i);\r\n  let res = natureList.map((nat) => {\r\n    return {\r\n      label: nat,\r\n      backgroundColor: ColorsHelper.randomColor(),\r\n      data: placeHolder.map((p) => {\r\n        let x = data.kpiSummary.find(\r\n          (d) => d.natureName === nat && d.name === p.name\r\n        );\r\n        return x ? x.count : 0;\r\n      }),\r\n    };\r\n  });\r\n\r\n  const meta = {\r\n    data: res,\r\n    labels: placeHolder.map((r) => r.name),\r\n    beginAtZero: true,\r\n  };\r\n\r\n  return (\r\n    <BarGraph\r\n      stacked={true}\r\n      meta={meta}\r\n      title=\"Complaints KPI\"\r\n      graphId=\"complaints-kpi-summary\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComplaintsKPIGraph;\r\n","import React from \"react\";\r\nimport ComplaintsByNatureGraph from \"./dashboard/ComplaintsByNatureGraph\";\r\nimport ComplaintsByStatusGraph from \"./dashboard/ComplaintsByStatusGraph\";\r\nimport ComplaintsByLocationGraph from \"./dashboard/ComplaintsByLocationGraph\";\r\nimport ComplaintsKPIGraph from \"./dashboard/ComplaintsKPIGraph\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <ComplaintsByStatusGraph />\r\n      <ComplaintsByLocationGraph />\r\n      <ComplaintsByNatureGraph />\r\n      <ComplaintsKPIGraph />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nfunction Table({ columns, data, idCol = \"id\" }) {\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"table-scrollable\">\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col) => (\r\n              <th key={col.name}>{col.label}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row) => (\r\n            <tr key={row[idCol]}>\r\n              {columns.map((col) => (\r\n                <td key={col.name} className={col.className}>\r\n                  {col.render ? col.render(row) : row[col.name]}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nconst MatIcon = ({ name, extra, text }) => (\r\n  <>\r\n    <span className={`mat-icon material-icons${extra ? \" \" + extra : \"\"}`}>\r\n      {name}\r\n    </span>\r\n    {text && <span>{text}</span>}\r\n  </>\r\n);\r\nexport default MatIcon;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const COMPLAINTS = gql`\r\n  query fetchComplaints(\r\n    $pageNo: Int\r\n    $pageSize: Int\r\n    $clientName: String\r\n    $location: Int\r\n    $nature: Int\r\n    $status: String\r\n  ) {\r\n    complaints(\r\n      pageNo: $pageNo\r\n      pageSize: $pageSize\r\n      clientName: $clientName\r\n      location: $location\r\n      nature: $nature\r\n      status: $status\r\n    ) {\r\n      id\r\n      clientName\r\n      location {\r\n        id\r\n        name\r\n      }\r\n      openDate\r\n      status\r\n      details\r\n      rca\r\n      actionPlan\r\n      results\r\n      financialImpact\r\n      costCenter\r\n      responsiblePerson\r\n      dueDate\r\n      closeDate\r\n      assignedTo {\r\n        id\r\n        username\r\n      }\r\n      nature {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_COMPLAINT = gql`\r\n  query getComplaint($id: ID!) {\r\n    complaint(id: $id) {\r\n      id\r\n      clientName\r\n      openDate\r\n      status\r\n      details\r\n      rca\r\n      actionPlan\r\n      results\r\n      financialImpact\r\n      costCenter\r\n      responsiblePerson\r\n      dueDate\r\n      nature {\r\n        id\r\n        name\r\n      }\r\n      location {\r\n        id\r\n        name\r\n      }\r\n      assignedTo {\r\n        id\r\n        username\r\n      }\r\n      assignedAt\r\n      closedBy {\r\n        id\r\n        username\r\n      }\r\n      closeDate\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NATURES = gql`\r\n  query getNatures {\r\n    natures {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\nexport const COMPLAINT_ATTACHMENTS = gql`\r\n  query getComplAttachments($complaint_id: ID!) {\r\n    complaintAttachments(complaintId: $complaint_id) {\r\n      id\r\n      file\r\n    }\r\n  }\r\n`;\r\nexport const LOCATIONS = gql`\r\n  query getLocations {\r\n    locations {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_COMPLAINT = gql`\r\n  mutation createComplaint(\r\n    $details: String!\r\n    $clientName: String!\r\n    $openDate: DateTime!\r\n    $nature: ID!\r\n    $location: ID!\r\n    $attachments: [FileType]\r\n  ) {\r\n    registerComplaint(\r\n      details: $details\r\n      clientName: $clientName\r\n      nature: $nature\r\n      location: $location\r\n      openDate: $openDate\r\n      attachments: $attachments\r\n    ) {\r\n      complaint {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_ASSIGN_COMPLAINT = gql`\r\n  mutation assignTo($id: ID!, $userId: ID!) {\r\n    assignComplaint(id: $id, userId: $userId) {\r\n      complaint {\r\n        id\r\n        details\r\n        assignedTo {\r\n          id\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_DETAILS_COMPLAINT = gql`\r\n  mutation updateDetails(\r\n    $id: ID!\r\n    $rca: String!\r\n    $actionPlan: String!\r\n    $results: String!\r\n    $financialImpact: String!\r\n    $costCenter: String!\r\n    $responsiblePerson: String!\r\n    $attachments: [FileType]\r\n  ) {\r\n    updateComplaint(\r\n      id: $id\r\n      rca: $rca\r\n      actionPlan: $actionPlan\r\n      results: $results\r\n      financialImpact: $financialImpact\r\n      costCenter: $costCenter\r\n      responsiblePerson: $responsiblePerson\r\n      attachments: $attachments\r\n    ) {\r\n      complaint {\r\n        id\r\n        details\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SEND_FEEDBACK = gql`\r\n  mutation sendFeedback(\r\n    $attachments: [FileType]\r\n    $id: ID!\r\n    $email: String!\r\n    $remarks: String\r\n  ) {\r\n    feedback(\r\n      attachments: $attachments\r\n      id: $id\r\n      email: $email\r\n      remarks: $remarks\r\n    ) {\r\n      complaint {\r\n        id\r\n        clientName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_STATUSES = gql`\r\n  query getStatuses {\r\n    statuses {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nfunction Input({ label, name, help, type = \"text\", cls, ...props }) {\r\n  return (\r\n    <div className={`input-wrap ${cls || \"\"}`}>\r\n      <label htmlFor={name}>{label}</label>\r\n      {type === \"textarea\" ? (\r\n        <textarea name={name} id={name} {...props} />\r\n      ) : (\r\n        <input type={type} name={name} id={name} {...props} />\r\n      )}\r\n      {help && <span className=\"input-help\">{help}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\n\r\nfunction Select({ label, name, query, options = [], ...props }) {\r\n  let { loading, data, error } = useQuery(query ? query.name : USERS_GET_ME, {\r\n    skip: query === null,\r\n  });\r\n  if (loading || error) {\r\n    return null;\r\n  }\r\n\r\n  if (data && query) {\r\n    options = data[query.data];\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-wrap\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...props}>\r\n        <option value=\"\">---Select---</option>\r\n        {options.map((o) => (\r\n          <option key={o.id} value={o.id}>\r\n            {o.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n","export const attachmentsChangeHandler = (e, cb) => {\r\n  let files = [];\r\n\r\n  let updateAttachements = (files) => {\r\n    cb(files);\r\n  };\r\n\r\n  let theFiles = e.target.files;\r\n  for (let i = 0; i < theFiles.length; i++) {\r\n    const reader = new FileReader();\r\n    let file = theFiles[i];\r\n    reader.addEventListener(\"load\", () => {\r\n      let data = reader.result;\r\n      files.push({ filename: file.name, data: data });\r\n      if (files.length === theFiles.length) {\r\n        updateAttachements(files);\r\n      }\r\n    });\r\n    reader.readAsDataURL(file);\r\n  }\r\n};\r\n","export const PAGE_SIZE = 10;\r\n\r\nexport const COMPLAINTS_FILTER_VARS = {\r\n  pageSize: PAGE_SIZE,\r\n  pageNo: 1,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../../components/forms/Input\";\r\nimport Select from \"../../components/forms/Select\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  REGISTER_COMPLAINT,\r\n  COMPLAINTS,\r\n  NATURES,\r\n  LOCATIONS,\r\n} from \"../../helpers/GraphQL\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { attachmentsChangeHandler } from \"../../helpers/FileUpload\";\r\nimport { COMPLAINTS_FILTER_VARS } from \"../../constants\";\r\n\r\nfunction NewComplaintRegisterPage({}) {\r\n  let natures = useQuery(NATURES);\r\n  let locations = useQuery(LOCATIONS);\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerComplaint, { loading }] = useMutation(REGISTER_COMPLAINT);\r\n  const natureOptions = natures.data ? natures.data.natures : [];\r\n  const locationOptions = locations.data ? locations.data.locations : [];\r\n  const [attachments, setAttachments] = useState([]);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    registerComplaint({\r\n      variables: {\r\n        ...formData,\r\n        attachments: attachments,\r\n        openDate: `${formData.openDate}T00:00+00:00`,\r\n      },\r\n      refetchQueries: () => [\r\n        { query: COMPLAINTS, variables: COMPLAINTS_FILTER_VARS },\r\n      ],\r\n      awaitRefetchQueries: true,\r\n    }).then(\r\n      () => setRedirect(\"/complaints\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/complaints\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Register New Complaint</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-grid-2\">\r\n          <div>\r\n            <Input\r\n              name=\"clientName\"\r\n              label=\"Client Name\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <Select\r\n              name=\"location\"\r\n              label=\"Location\"\r\n              options={locationOptions}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <Select\r\n              name=\"nature\"\r\n              label=\"Nature\"\r\n              options={natureOptions}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n\r\n            <Input\r\n              name=\"openDate\"\r\n              label=\"Open Date\"\r\n              type=\"date\"\r\n              onChange={handleChange}\r\n              required\r\n              max={new Date().toISOString().split(\"T\")[0]}\r\n            />\r\n          </div>\r\n          <div className=\"register-right\">\r\n            <Input\r\n              name=\"details\"\r\n              label=\"Details\"\r\n              type=\"textarea\"\r\n              onChange={handleChange}\r\n              required\r\n              maxLength=\"300\"\r\n              help=\"Max 300 characters\"\r\n              cls=\"large\"\r\n            />\r\n            <Input\r\n              name=\"attachments\"\r\n              type=\"file\"\r\n              label=\"Attachments\"\r\n              multiple\r\n              onChange={(e) =>\r\n                attachmentsChangeHandler(e, (files) => setAttachments(files))\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewComplaintRegisterPage;\r\n","import React from \"react\";\r\nimport MatIcon from \"../icons/MatIcon\";\r\n\r\nfunction Modal({ onClose, title, children, posx, posy, ...props }) {\r\n  const showHideClassName = \"modal display-block\";\r\n  return (\r\n    <div className={showHideClassName} {...props}>\r\n      <div className=\"modal-main\">\r\n        <div className=\"modal-header\">\r\n          {title ? <h5 className=\"modal-title\">{title}</h5> : <span></span>}\r\n          <div className=\"btn-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn text-warning m-1\"\r\n              onClick={onClose}\r\n            >\r\n              <MatIcon name=\"close\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-content\">{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport Select from \"../../components/forms/Select\";\r\nimport { UPDATE_ASSIGN_COMPLAINT, COMPLAINTS } from \"../../helpers/GraphQL\";\r\nimport { USERS } from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\n\r\nfunction AssignComplaintPopup({ complaint, onComplete }) {\r\n  let users = useQuery(USERS);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [assignTo, { loading }] = useMutation(UPDATE_ASSIGN_COMPLAINT);\r\n  const userOptions = users.data\r\n    ? users.data.users.map((r) => {\r\n        return { ...r, name: r.username };\r\n      })\r\n    : [];\r\n  console.log(complaint);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    assignTo({\r\n      variables: {\r\n        ...formData,\r\n        id: complaint.id,\r\n      },\r\n      refetchQueries: [{ query: COMPLAINTS }],\r\n    }).then(\r\n      () => onComplete(),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return (\r\n    <div>\r\n      <h5>Assign Complaint To User</h5>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Select\r\n            name=\"userId\"\r\n            label=\"Assign To\"\r\n            onChange={handleChange}\r\n            required\r\n            options={userOptions}\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignComplaintPopup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  COMPLAINTS,\r\n  UPDATE_DETAILS_COMPLAINT,\r\n  GET_COMPLAINT,\r\n} from \"../../helpers/GraphQL\";\r\nimport Input from \"../../components/forms/Input\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { Redirect, NavLink } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { withRouter } from \"react-router\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { attachmentsChangeHandler } from \"../../helpers/FileUpload\";\r\n\r\nfunction UpdateComplaintForm({ match }) {\r\n  useProfile();\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [attachments, setAttachments] = useState([]);\r\n\r\n  const { loading, error, data } = useQuery(GET_COMPLAINT, {\r\n    variables: { id: match.params.id },\r\n  });\r\n  const [updateDetails] = useMutation(UPDATE_DETAILS_COMPLAINT);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  let complaint = data.complaint;\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    let prev = new Map();\r\n    Object.keys(complaint).forEach((key) => {\r\n      if (!formData[key]) {\r\n        prev[key] = complaint[key];\r\n      }\r\n    });\r\n\r\n    updateDetails({\r\n      variables: {\r\n        ...formData,\r\n        ...prev,\r\n        attachments: attachments,\r\n        id: complaint.id,\r\n      },\r\n      refetchQueries: [{ query: COMPLAINTS }],\r\n    }).then(\r\n      () => setRedirect(\"/complaints\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  const inputsConf = {\r\n    type: \"textarea\",\r\n    onChange: handleChange,\r\n    required: \"required\",\r\n    maxLength: \"200\",\r\n    help: \"Max 200 characters\",\r\n  };\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div className=\"form-wrap\">\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/complaints\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Fill complain analysis/resolution</h5>\r\n        </div>\r\n      </div>\r\n\r\n      <form className=\"form form-flex v-scroll\" onSubmit={handleSubmit}>\r\n        <div className=\"form-fields\">\r\n          <p>\r\n            <b>Details:</b> {complaint.details}\r\n          </p>\r\n          <Input\r\n            name=\"actionPlan\"\r\n            label=\"Action Plan\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.actionPlan}\r\n          />\r\n          <Input\r\n            name=\"rca\"\r\n            label=\"Root Cause Analysis\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.rca}\r\n          />\r\n          <Input\r\n            name=\"results\"\r\n            label=\"Results\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.results}\r\n            maxLength=\"500\"\r\n            help=\"Max 500 characters\"\r\n            rows=\"4\"\r\n          />\r\n          <Input\r\n            name=\"financialImpact\"\r\n            label=\"Financial Impact\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.financialImpact}\r\n          />\r\n          <Input\r\n            name=\"costCenter\"\r\n            label=\"Cost Center\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.costCenter}\r\n          />\r\n          <Input\r\n            name=\"responsiblePerson\"\r\n            label=\"Responsible Person\"\r\n            {...inputsConf}\r\n            defaultValue={complaint.responsiblePerson}\r\n          />\r\n          <Input\r\n            name=\"attachments\"\r\n            type=\"file\"\r\n            label=\"Attachments\"\r\n            multiple\r\n            onChange={(e) =>\r\n              attachmentsChangeHandler(e, (files) => setAttachments(files))\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(UpdateComplaintForm);\r\n","import React from \"react\";\r\nimport MatIcon from \"../icons/MatIcon\";\r\n\r\nfunction Pagination({ pageNo, onPageChanged, lastPage }) {\r\n  const handlePrev = () => {\r\n    let newPage = pageNo > 1 ? pageNo - 1 : 1;\r\n    if (onPageChanged) {\r\n      onPageChanged(newPage);\r\n    }\r\n  };\r\n  const handleNext = () => {\r\n    let newPage = pageNo + 1;\r\n    if (onPageChanged) {\r\n      onPageChanged(newPage);\r\n    }\r\n  };\r\n  return (\r\n    <ul className=\"pagination\">\r\n      <li className=\"btn-wrap\">\r\n        <button onClick={handlePrev} disabled={pageNo <= 1}>\r\n          <MatIcon name=\"keyboard_arrow_left\" /> Previous\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <span>Page {pageNo}</span>\r\n      </li>\r\n      <li className=\"btn-wrap\">\r\n        <button onClick={handleNext} disabled={lastPage}>\r\n          Next <MatIcon name=\"keyboard_arrow_right\" />\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { SEND_FEEDBACK, COMPLAINTS } from \"../../helpers/GraphQL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Input from \"../../components/forms/Input\";\r\nimport { attachmentsChangeHandler } from \"../../helpers/FileUpload\";\r\n\r\nfunction FeedbackForm({ complaint, img }) {\r\n  const [sendFeedback, {}] = useMutation(SEND_FEEDBACK);\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  const [remarks, setRemarks] = useState(null);\r\n  const [attachments, setAttachments] = useState([]);\r\n\r\n  function sendNow(e) {\r\n    e.preventDefault();\r\n    let params = {\r\n      id: complaint.id,\r\n      attachments: attachments,\r\n      email: email,\r\n      remarks: remarks,\r\n    };\r\n    console.log(params);\r\n    sendFeedback({\r\n      variables: params,\r\n      refetchQueries: [{ query: COMPLAINTS }],\r\n    }).then(\r\n      () => setRedirect(\"/complaints\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <form className=\"form\" onSubmit={sendNow} encType=\"multipart/form-data\">\r\n        <div>\r\n          <Input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            label=\"Customer Email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"remarks\"\r\n            type=\"textarea\"\r\n            label=\"Remarks\"\r\n            onChange={(e) => setRemarks(e.target.value)}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"attachments\"\r\n            type=\"file\"\r\n            label=\"Attachments\"\r\n            multiple\r\n            onChange={(e) =>\r\n              attachmentsChangeHandler(e, (files) => setAttachments(files))\r\n            }\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button className=\"p-1\">Send Feedback</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeedbackForm;\r\n","// Configurations:\r\n// 1. Backend endpoint depending on test vs live\r\n// 2.\r\n\r\nconst ENVIRON = process.env.NODE_ENV === \"development\" ? \"DEV\" : \"PROD\";\r\n\r\nconst CONF = {\r\n  DEV: {\r\n    baseUrl: \"http://localhost:8000/api\",\r\n    ROOT: \"http://localhost:8000\",\r\n  },\r\n  PROD: {\r\n    baseUrl: \"/api\",\r\n    ROOT: \"\",\r\n  },\r\n};\r\n\r\nexport const BASE_URL = CONF[ENVIRON].baseUrl;\r\nexport const ROOT_URL = CONF[ENVIRON].ROOT;\r\nexport const GOOGLE_API_KEY = \"AIzaSyDQ7WXCqy5-cyHTyho_XLgBDHJZe4n-nAw\";\r\n","import React from \"react\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { ROOT_URL } from \"../../conf\";\r\n\r\nfunction Attachment({ doc }) {\r\n  console.log(doc);\r\n  let split = doc.file.split(\"/\");\r\n  let name = split[split.length - 1];\r\n  return (\r\n    <>\r\n      <span className=\"text-ellipsis\">{name}</span>\r\n      <a\r\n        href={`${ROOT_URL}/media/${doc.file}`}\r\n        className=\"borded-link\"\r\n        download\r\n      >\r\n        <MatIcon name=\"arrow_downward\" />\r\n      </a>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Attachment;\r\n","import React from \"react\";\r\nimport { COMPLAINT_ATTACHMENTS } from \"../../helpers/GraphQL\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport Attachment from \"./Attachment\";\r\n\r\nfunction ComplaintAttachements({ complaint_id }) {\r\n  const { loading, error, data } = useQuery(COMPLAINT_ATTACHMENTS, {\r\n    variables: { complaint_id: complaint_id },\r\n  });\r\n  if (loading || error) {\r\n    return null;\r\n  }\r\n  const attachments = data.complaintAttachments;\r\n  return (\r\n    <ul className=\"attachments mb-1\">\r\n      <li>\r\n        <b>Attachments</b>\r\n      </li>\r\n      {attachments.length ? (\r\n        attachments.map((doc) => (\r\n          <li key={doc.id}>\r\n            <Attachment doc={doc} />\r\n          </li>\r\n        ))\r\n      ) : (\r\n        <li>None</li>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ComplaintAttachements;\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { GET_COMPLAINT } from \"../../helpers/GraphQL\";\r\nimport useProfile from \"../../components/hooks/useProfile\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { useRef } from \"react\";\r\nimport Modal from \"../../components/modals/Modal\";\r\nimport FeedbackForm from \"./FeedbackForm\";\r\nimport ComplaintAttachements from \"./ComplaintAttachements\";\r\nlet dayjs = require(\"dayjs\");\r\nlet html2canvas = require(\"html2canvas\");\r\n\r\nfunction ComplaintDetailViewPage({ match }) {\r\n  useProfile();\r\n  const detailsView = useRef(null);\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [img, setImg] = useState(null);\r\n  const { loading, error, data } = useQuery(GET_COMPLAINT, {\r\n    variables: { id: match.params.id },\r\n  });\r\n\r\n  error && console.error(error);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  let complaint = data.complaint;\r\n  function calc_kpi_days(open, close) {\r\n    console.log(`Open: ${open}`, `Close: ${close}`);\r\n    if (!close) {\r\n      close = dayjs().format(\"YYYY-MM-DD\");\r\n    }\r\n    if (open.indexOf(\"T\")) open = open.split(\"T\")[0];\r\n    if (close.indexOf(\"T\")) close = close.split(\"T\")[0];\r\n    console.log(`Open: ${open}`, `Close: ${close}`);\r\n    return dayjs(close).diff(dayjs(open), \"day\");\r\n  }\r\n  function detailsImage(e) {\r\n    let btn = e.target;\r\n    console.log(btn);\r\n    html2canvas(detailsView.current, { scrollY: -window.scrollY }).then(\r\n      (canvas) => {\r\n        // document.body.appendChild(canvas);\r\n        console.log(canvas);\r\n        let dt = canvas.toDataURL(\"image/png\");\r\n        // downloadURI(dt, \"test.png\");\r\n        setImg(dt);\r\n        setFeedback(true);\r\n      }\r\n    );\r\n  }\r\n  const {\r\n    id,\r\n    clientName,\r\n    location,\r\n    nature,\r\n    openDate,\r\n    details,\r\n    actionPlan,\r\n    closeDate,\r\n    costCenter,\r\n    financialImpact,\r\n    rca,\r\n    responsiblePerson,\r\n    results,\r\n    status,\r\n    assignedTo,\r\n    assignedAt,\r\n    closedBy,\r\n  } = complaint;\r\n  const fmtDate = (strDate) => {\r\n    if (strDate) {\r\n      if (strDate.indexOf(\"T\")) strDate = strDate.split(\"T\")[0];\r\n      return dayjs(strDate).format(\"DD/MM/YYYY\");\r\n    }\r\n    return null;\r\n  };\r\n  return (\r\n    <div className=\"details\">\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/complaints\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Complete Complaint Information</h5>\r\n        </div>\r\n      </div>\r\n      <div className=\"details-grid\" ref={detailsView}>\r\n        <div className=\"grid-form-details\">\r\n          <div>\r\n            <label>Client Name</label>\r\n            <p>{clientName}</p>\r\n          </div>\r\n          <div>\r\n            <label>Location</label>\r\n            <p>{location.name}</p>\r\n          </div>\r\n          <div>\r\n            <label>Nature</label>\r\n            <p>{nature.name}</p>\r\n          </div>\r\n          <div>\r\n            <label>Open Date</label>\r\n            <p>{fmtDate(openDate)}</p>\r\n          </div>\r\n          <div className=\"span\">\r\n            <label>Details</label>\r\n            <p>{details}</p>\r\n          </div>\r\n          <div>\r\n            <label>Action Plan</label>\r\n            <p>{actionPlan}</p>\r\n          </div>\r\n          <div>\r\n            <label>Root Cause Analysis</label>\r\n            <p>{rca}</p>\r\n          </div>\r\n          <div className=\"span\">\r\n            <label>Results</label>\r\n            <p>{results}</p>\r\n          </div>\r\n          <div className=\"span\">\r\n            <label>Financial Impact</label>\r\n            <p>{financialImpact}</p>\r\n          </div>\r\n          <div>\r\n            <label>Cost Center</label>\r\n            <p>{costCenter}</p>\r\n          </div>\r\n          <div>\r\n            <label>Responsible Person</label>\r\n            <p>{responsiblePerson}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"sidebar mt-1 bg-light\">\r\n          <div className=\"status\">\r\n            <label>\r\n              Status: <span>{status}</span>\r\n            </label>\r\n          </div>\r\n          <ul>\r\n            {openDate && (\r\n              <li>\r\n                <MatIcon name=\"done\" />\r\n                On {fmtDate(openDate)}, Created\r\n              </li>\r\n            )}\r\n            {assignedTo && (\r\n              <li>\r\n                <MatIcon name=\"done\" />\r\n                On {fmtDate(assignedAt)}, Assigned to {assignedTo.username}\r\n              </li>\r\n            )}\r\n            {closedBy && (\r\n              <li>\r\n                <MatIcon name=\"done\" />\r\n                On {fmtDate(closeDate)}, Closed by {closedBy.username}\r\n              </li>\r\n            )}\r\n            <li className=\"kpi\">\r\n              KPI:\r\n              <span className=\"ml-1\">\r\n                <b>{calc_kpi_days(openDate, closeDate)}</b> day(s)\r\n              </span>\r\n            </li>\r\n          </ul>\r\n          <ComplaintAttachements complaint_id={id} />\r\n          {status === \"COMPLETED\" && (\r\n            <button className=\"send-feedback btn ripple\" onClick={detailsImage}>\r\n              <MatIcon name=\"mail_outline\" text=\"Send Feedback To Customer\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {feedback && (\r\n        <Modal\r\n          title={`Feedback To: ${complaint.clientName}`}\r\n          onClose={() => setFeedback(false)}\r\n        >\r\n          <FeedbackForm\r\n            complaint={complaint}\r\n            img={img}\r\n            onComplete={() => setFeedback(false)}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ComplaintDetailViewPage);\r\n","import React from \"react\";\r\nimport Input from \"./Input\";\r\nimport Select from \"./Select\";\r\n\r\nfunction FilterExport({\r\n  fields,\r\n  handleChange,\r\n  handleSubmit,\r\n  filter,\r\n  handleExport,\r\n}) {\r\n  return (\r\n    <div className=\"filter-export  w-100\">\r\n      <form className=\"form d-flex align-bottom\" onSubmit={handleSubmit}>\r\n        <div className=\"inline-fields\">\r\n          {fields.map((f) => {\r\n            return f.type && f.type === \"select\" ? (\r\n              <Select key={f.name} {...f} onChange={handleChange} />\r\n            ) : (\r\n              <Input key={f.name} {...f} onChange={handleChange} />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          <button name=\"filter\">Filter</button>\r\n          <button\r\n            className=\"ml-1\"\r\n            name=\"export\"\r\n            type=\"button\"\r\n            onClick={handleExport}\r\n          >\r\n            Export\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterExport;\r\n","import React, { useState } from \"react\";\r\nimport { NATURES, LOCATIONS, GET_STATUSES } from \"../../helpers/GraphQL\";\r\nimport FilterExport from \"../../components/forms/FilterExport\";\r\n\r\nfunction FilterForm({ handleSubmit, handleExport, filter = {} }) {\r\n  console.log(filter);\r\n  const [formData, setFormData] = useState(filter);\r\n  const searchFields = [\r\n    { name: \"clientName\", label: \"Client Name\" },\r\n    {\r\n      name: \"location\",\r\n      label: \"Location\",\r\n      type: \"select\",\r\n      query: { name: LOCATIONS, data: \"locations\" },\r\n      defaultValue: filter[\"location\"],\r\n    },\r\n    {\r\n      name: \"nature\",\r\n      label: \"Nature\",\r\n      type: \"select\",\r\n      query: { name: NATURES, data: \"natures\" },\r\n      defaultValue: filter[\"nature\"],\r\n    },\r\n    {\r\n      name: \"status\",\r\n      label: \"Status\",\r\n      type: \"select\",\r\n      query: { name: GET_STATUSES, data: \"statuses\" },\r\n      defaultValue: filter[\"status\"],\r\n    },\r\n  ];\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value || null });\r\n  }\r\n\r\n  return (\r\n    <FilterExport\r\n      handleSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit(formData);\r\n      }}\r\n      fields={searchFields}\r\n      handleChange={handleChange}\r\n      handleExport={(e) => {\r\n        e.preventDefault();\r\n        handleExport(formData);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FilterForm;\r\n","import React, { useState } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { Route, NavLink } from \"react-router-dom\";\r\n\r\nimport Table from \"../components/tables/Table\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport { COMPLAINTS } from \"../helpers/GraphQL\";\r\nimport NewComplaintRegisterPage from \"./complaints/NewComplaintRegisterPage\";\r\nimport Modal from \"../components/modals/Modal\";\r\nimport AssignComplaintPopup from \"./complaints/AssignComplaintPopup\";\r\nimport UpdateComplaintForm from \"./complaints/UpdateComplaintForm\";\r\nimport useProfile from \"../components/hooks/useProfile\";\r\nimport Pagination from \"../components/tables/Pagination\";\r\nimport { useEffect } from \"react\";\r\nimport ComplaintDetailViewPage from \"./complaints/ComplaintDetailViewPage\";\r\nimport FilterForm from \"./complaints/FilterForm\";\r\nimport { BASE_URL } from \"../conf\";\r\nconst PAGE_SIZE = 10;\r\nfunction ComplaintsPage() {\r\n  useProfile();\r\n  const [pageNo, setPageNo] = useState(1);\r\n  const [filter, setFilter] = useState(new Map());\r\n  const [getComplaints, { loading, data, error }] = useLazyQuery(COMPLAINTS, {\r\n    variables: { pageSize: PAGE_SIZE, pageNo: pageNo, ...filter },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const abortCtrl = new AbortController();\r\n    console.log(\"Start\");\r\n    getComplaints();\r\n\r\n    return function cleanup() {\r\n      abortCtrl.abort();\r\n    };\r\n  }, [pageNo, filter]);\r\n\r\n  function handleSubmit(formData) {\r\n    console.log(formData);\r\n    let params = new Map();\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value) {\r\n        params[key] = value;\r\n      }\r\n    }\r\n    console.log(\"Params: \", params);\r\n    setFilter(params);\r\n    setPageNo(1);\r\n  }\r\n\r\n  function handleExport(formData) {\r\n    let params = new Map();\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      if (value) {\r\n        params[key] = value;\r\n      }\r\n    }\r\n    let q = Object.keys(params)\r\n      .map((key) => key + \"=\" + params[key])\r\n      .join(\"&\");\r\n    fetch(`${BASE_URL}/export-complaints?${q}`)\r\n      .then((response) => response.blob())\r\n      .then((blob) => {\r\n        var url = window.URL.createObjectURL(blob);\r\n        var a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = \"Export.xlsx\";\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        a.remove();\r\n      });\r\n  }\r\n\r\n  function handlePageChange(newPageNo) {\r\n    setPageNo(newPageNo);\r\n  }\r\n\r\n  const [assign, setAssign] = useState(false);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  const columns = [\r\n    { name: \"id\", label: \"ID\" },\r\n    { name: \"clientName\", label: \"Client Name\" },\r\n    { name: \"location_name\", label: \"Location\" },\r\n    { name: \"openDate\", label: \"Open Date\" },\r\n    { name: \"nature_name\", label: \"Nature of Complaint\" },\r\n    { name: \"status\", label: \"Status\" },\r\n    {\r\n      name: \"assigned_to\",\r\n      label: \"Assigned To\",\r\n      render: (row) =>\r\n        row.assignedTo ? (\r\n          <span>{row.assignedTo.username}</span>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              setAssign(true);\r\n              setSelected(row);\r\n            }}\r\n          >\r\n            Assign\r\n          </button>\r\n        ),\r\n    },\r\n    { name: \"details\", label: \"Details\", className: \"col-ellipsis\" },\r\n    {\r\n      name: \"updateDetails\",\r\n      label: \"\",\r\n      render: (row) =>\r\n        row.status === \"ASSIGNED\" ? (\r\n          <NavLink\r\n            className=\"btn btn-light p-1 d-flex align-left\"\r\n            to={`/complaints/update/${row.id}`}\r\n          >\r\n            <MatIcon name=\"settings\" text=\"Complete\" />\r\n          </NavLink>\r\n        ) : null,\r\n    },\r\n    {\r\n      name: \"viewDetails\",\r\n      render: (row) => (\r\n        <NavLink to={`/complaints/view/${row.id}`} className=\"d-flex\">\r\n          <MatIcon name=\"unfold_more\" />\r\n        </NavLink>\r\n      ),\r\n    },\r\n  ];\r\n  const fmtDate = (strDate) => {\r\n    let parsed = Date.parse(strDate);\r\n    return new Date(parsed).toLocaleDateString(\"en-GB\");\r\n  };\r\n  const records = data\r\n    ? data.complaints.map((r) => ({\r\n        ...r,\r\n        nature_name: r.nature.name,\r\n        location_name: r.location ? r.location.name : \"\",\r\n        openDate: fmtDate(r.openDate),\r\n      }))\r\n    : [];\r\n  return (\r\n    <>\r\n      <Route path=\"/complaints\" exact>\r\n        <div className=\"toolbar\">\r\n          <h5>List of complaints</h5>\r\n          <NavLink\r\n            className=\"d-flex btn has-left-icon\"\r\n            to=\"/complaints/new-complaint\"\r\n          >\r\n            <MatIcon name=\"add\" text=\"New Complaint\" />\r\n          </NavLink>\r\n        </div>\r\n        <hr />\r\n        <div className=\"toolbar\">\r\n          {data && (\r\n            <FilterForm\r\n              handleSubmit={handleSubmit}\r\n              filter={filter}\r\n              handleExport={handleExport}\r\n            />\r\n          )}\r\n        </div>\r\n        <Table columns={columns} data={records} />\r\n        {data && (\r\n          <Pagination\r\n            pageNo={pageNo}\r\n            onPageChanged={handlePageChange}\r\n            lastPage={data.complaints.length < PAGE_SIZE}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/complaints/new-complaint\" exact>\r\n        <NewComplaintRegisterPage />\r\n      </Route>\r\n      <Route path=\"/complaints/update/:id\" exact>\r\n        <UpdateComplaintForm />\r\n      </Route>\r\n      <Route path=\"/complaints/view/:id\" exact>\r\n        <ComplaintDetailViewPage />\r\n      </Route>\r\n      {assign && (\r\n        <Modal title={selected.clientName} onClose={() => setAssign(false)}>\r\n          <AssignComplaintPopup\r\n            complaint={selected}\r\n            onComplete={() => setAssign(false)}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ComplaintsPage;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport { REGISTER_USER, USERS, USERS_GET_ME } from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport Input from \"../../components/forms/Input\";\r\n\r\nfunction NewUserPage() {\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerUser, { loading }] = useMutation(REGISTER_USER);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    registerUser({\r\n      variables: {\r\n        ...formData,\r\n      },\r\n      refetchQueries: [{ query: USERS }, { query: USERS_GET_ME }],\r\n    }).then(\r\n      () => setRedirect(\"/users\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/users\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Register New User</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form form-medium\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            required\r\n          />\r\n          <Input\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Input\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewUserPage;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect, withRouter } from \"react-router-dom\";\r\nimport MatIcon from \"../../components/icons/MatIcon\";\r\nimport {\r\n  REGISTER_USER,\r\n  USERS,\r\n  USERS_GET_ME,\r\n  GET_USER,\r\n} from \"../../helpers/UsersGraphQL\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport Input from \"../../components/forms/Input\";\r\n\r\nfunction UpdateUserPage({ match }) {\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [registerUser, {}] = useMutation(REGISTER_USER);\r\n  const { loading, error, data } = useQuery(GET_USER, {\r\n    variables: { id: match.params.id },\r\n  });\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n  let user = data.user;\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    let prev = new Map();\r\n    Object.keys(user).forEach((key) => {\r\n      if (!formData[key]) {\r\n        prev[key] = user[key];\r\n      }\r\n    });\r\n\r\n    registerUser({\r\n      variables: { ...formData, ...prev, id: user.id },\r\n      refetchQueries: [{ query: USERS }, { query: USERS_GET_ME }],\r\n    }).then(\r\n      () => setRedirect(\"/users\"),\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"titlebar\">\r\n          <NavLink to=\"/users\" className=\"btn btn-light mr-1\">\r\n            <MatIcon name=\"keyboard_arrow_left\" />\r\n          </NavLink>\r\n          <h5>Update User</h5>\r\n        </div>\r\n      </div>\r\n      {loading && <p>Sending ....</p>}\r\n      <form className=\"form form-medium\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.username}\r\n            readOnly={true}\r\n          />\r\n          <Input\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            required\r\n            defaultValue={user.email}\r\n          />\r\n          <Input\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.firstName}\r\n          />\r\n          <Input\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            onChange={handleChange}\r\n            required\r\n            defaultValue={user.lastName}\r\n          />\r\n        </div>\r\n        <div className=\"form-footer\">\r\n          <button>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(UpdateUserPage);\r\n","import React from \"react\";\r\nimport { USERS } from \"../helpers/UsersGraphQL\";\r\nimport NewUserPage from \"./users/NewUserPage\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Route, NavLink, useHistory } from \"react-router-dom\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport Table from \"../components/tables/Table\";\r\nimport useProfile from \"../components/hooks/useProfile\";\r\nimport UpdateUserPage from \"./users/UpdateUserPage\";\r\n\r\nfunction UserManagementPage(props) {\r\n  useProfile();\r\n  const { loading, error, data } = useQuery(USERS);\r\n  if (loading) return null;\r\n  if (error) {\r\n    return <p>Error (:</p>;\r\n  }\r\n  const columns = [\r\n    { name: \"id\", label: \"ID\" },\r\n    { name: \"username\", label: \"Client Name\" },\r\n    { name: \"email\", label: \"Email\" },\r\n    { name: \"name\", label: \"Full Name\" },\r\n    {\r\n      name: \"actions\",\r\n      label: \"\",\r\n      render: (row) => (\r\n        <div>\r\n          <a href={`/users/update/${row.id}`} className=\"d-flex align-left\">\r\n            <MatIcon name=\"edit\" text=\"Edit\" />\r\n          </a>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const records = data.users.map((r) => ({\r\n    ...r,\r\n    name: r.firstName ? `${r.firstName} ${r.lastName}` : null,\r\n  }));\r\n  return (\r\n    <>\r\n      <Route path=\"/users\" exact>\r\n        <div className=\"toolbar\">\r\n          <h5>List of users</h5>\r\n          <NavLink\r\n            className=\"d-flex btn btn-light has-left-icon\"\r\n            to=\"/users/new-user\"\r\n          >\r\n            <MatIcon name=\"add\" text=\"New User\" />\r\n          </NavLink>\r\n        </div>\r\n        <Table columns={columns} data={records} />\r\n      </Route>\r\n      <Route path=\"/users/new-user\" exact>\r\n        <NewUserPage />\r\n      </Route>\r\n      <Route path=\"/users/update/:id\" exact>\r\n        <UpdateUserPage />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserManagementPage;\r\n","const ACCESS_TOKEN = \"AccessToken\";\r\n\r\nconst AuthHelper = {\r\n  saveToken: (token, cb) => {\r\n    sessionStorage.setItem(ACCESS_TOKEN, token);\r\n    cb(true);\r\n  },\r\n  getToken: () => sessionStorage.getItem(ACCESS_TOKEN),\r\n  removeToken: () => sessionStorage.removeItem(ACCESS_TOKEN),\r\n};\r\n\r\nexport default AuthHelper;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../components/forms/Input\";\r\nimport MatIcon from \"../components/icons/MatIcon\";\r\nimport AuthHelper from \"../helpers/AuthHelper\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { USERS_GET_TOKEN, USERS_GET_ME } from \"../helpers/UsersGraphQL\";\r\nimport { COMPLAINTS } from \"../helpers/GraphQL\";\r\n\r\nfunction LoginPage(props) {\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [redirect, setRedirect] = useState(null);\r\n  const [login, { loading, client }] = useMutation(USERS_GET_TOKEN);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    client.clearStore();\r\n    login({\r\n      variables: {\r\n        ...formData,\r\n      },\r\n    }).then(\r\n      (res) => {\r\n        if (res.data) {\r\n          let { token } = res.data.tokenAuth;\r\n          AuthHelper.saveToken(token, () => {\r\n            setRedirect(\"/\");\r\n          });\r\n        }\r\n      },\r\n      (res) => console.log(\"Error: \", res)\r\n    );\r\n  }\r\n  function handleChange(e) {\r\n    const { value, name } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n  return redirect ? (\r\n    <Redirect to={redirect} />\r\n  ) : (\r\n    <>\r\n      <div className=\"login-page box-shadow\">\r\n        <div className=\"login-header d-flex mb-1 p-1\">\r\n          <h3>Twiga - CCMS</h3>\r\n          <img\r\n            src={\r\n              process.env.PUBLIC_URL + \"/static/images/complaints_register.png\"\r\n            }\r\n            alt=\"Image\"\r\n          />\r\n        </div>\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n          <div className=\"mt-1\">\r\n            <Input\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-footer\">\r\n            <button>\r\n              <span className=\"mr-1\">Login</span>\r\n              <MatIcon name=\"login\" />\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport NavBar from \"./components/nav/NavBar\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport ComplaintsPage from \"./pages/ComplaintsPage\";\r\nimport UserManagementPage from \"./pages/UserManagementPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport AuthHelper from \"./helpers/AuthHelper\";\r\nimport { BASE_URL } from \"./conf\";\r\nconst getToken = () => {\r\n  const token = AuthHelper.getToken();\r\n  return token ? `JWT ${token}` : \"\";\r\n};\r\nconst requestMiddleware = (operation) => {\r\n  operation.setContext({\r\n    headers: {\r\n      Authorization: getToken(),\r\n    },\r\n  });\r\n};\r\nconst client = new ApolloClient({\r\n  uri: `${BASE_URL}/graphql`,\r\n  request: requestMiddleware,\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <ApolloProvider client={client}>\r\n        <Switch>\r\n          <Route path=\"/login\" exact>\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <NavBar />\r\n            <section className=\"page-content container\">\r\n              <div className=\"content\">\r\n                <Switch>\r\n                  <Route path=\"/\" exact>\r\n                    <HomePage />\r\n                  </Route>\r\n                  <Route path=\"/complaints\">\r\n                    <ComplaintsPage />\r\n                  </Route>\r\n                  <Route path=\"/users\">\r\n                    <UserManagementPage />\r\n                  </Route>\r\n                </Switch>\r\n              </div>\r\n            </section>\r\n          </Route>\r\n        </Switch>\r\n      </ApolloProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}